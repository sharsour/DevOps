/**
 * @description This rule updates the Order concept with the data of incoming PWM-OUT Order Event.
 * @author HYDPCM228839D
 */
rule Rules.OrderFlow.PWMOUTOrderUpdation {
	attribute {
		priority = 1;
		forwardChain = true;
	}
	declare {
		Events.Input.OrderEvent	orderEvent;
		Concepts.ORDERS order;
		Concepts.ORDER_RE_NUM ordReNum;
	}
	when {
		//Checking the System Name in Order Event.
		System.getGlobalVariableAsString("OrderSystems/InputSystems/PWMOUT-GOAIN","ETMGOAIN")==XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:System</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>");
		//Correlating Legacy Order Num in Order Event and Order Concept in Normal Order Scenario. 
		order.LGCY_ORD_NUM==XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:Lgcy_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>")||
		//Correlating Legacy Order Num in Order Event and Order Concept in Order Renumber Scenario. 
		order.LGCY_ORD_NUM==RuleFunctions.Inference.OrderFlowRF.getRenumberedOrder(XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:Lgcy_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>")/*OrdID String */,"OLD"/*Type String */,ordReNum/*ordReNum Concepts.ORDER_RE_NUM */);
	
	}
	then {
		System.debugOut("In PWM-OUT Order Updation rule");
		
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/OrderFlow\"/>\n                            </ns1:TransactionType>\n                            <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\">\n                                <ns1:TransactionID>\n                                    <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                                </ns1:TransactionID>\n                            </xsl:if>\n                            <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Plant_Num\">\n                                <ns1:BusinessID>\n                                    <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Plant_Num\"/>\n                                </ns1:BusinessID>\n                            </xsl:if>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Started processing Order Event at &quot;,$orderEvent/payload/ns:ORDER/ns:System)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($orderEvent)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			String wats=System.getGlobalVariableAsString("OrderSystems/ActualSystems/WATS","WATS");
			String sap=System.getGlobalVariableAsString("OrderSystems/ActualSystems/SAP","SAP");
			String pwm=System.getGlobalVariableAsString("OrderSystems/ActualSystems/PWM","PWM");
			String etm_Goa=System.getGlobalVariableAsString("OrderSystems/ActualSystems/ETM-GOA","ETM-GOA");
			String manual=System.getGlobalVariableAsString("OrderType/MANUAL","MANUAL");
			String HH=System.getGlobalVariableAsString("OrderType/HH","HH");
			
			//Used in Order Renumber Scenario.
			Concepts.ORDERS newOrder=order;
			Concepts.ORDER_SYSSTATE [] order_SysState=Instance.PropertyArray.toArrayContainedConcept(newOrder.SYSSTATE);
			Concepts.ORDER_SYSSTATE pwm_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(order_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,pwm/*system String */);
			
			
			//############################Checking if PWM-OUT is already received############################
			if(pwm_SysState!=null && pwm_SysState.OUT_DATETIME!=null)
			{
				System.debugOut("This Order is already sent by PWM & received by ETM-GOA");
				//Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"order\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"&quot;ORDER&quot;\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$order/PLANT_NUM\">\n                                <ns:BusinessID>\n                                    <xsl:value-of select=\"$order/PLANT_NUM\"/>\n                                </ns:BusinessID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/ErrorCodes/OrderAlreadyExists/code\"/>\n                        </ns:Code>\n                        <ns:Message>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/ErrorCodes/OrderAlreadyExists/message\"/>\n                        </ns:Message>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($orderEvent/payload)\"/>\n                        </ns:TransactionData>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			else
			{
				//############################Checking if incoming Lgcy_Ord_Num is re-numbered############################
				String incoming_ordNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:Lgcy_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>");
				String Old_Ord_Num=RuleFunctions.Inference.OrderFlowRF.getRenumberedOrder(incoming_ordNum/*OrdID String */,"OLD"/*Type String */,ordReNum/*ordReNum Concepts.ORDER_RE_NUM */);
				if(order.LGCY_ORD_NUM==Old_Ord_Num)
				{
					newOrder=Instance.createInstance("xslt://{{/Concepts/ORDERS}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:param name=\"order\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\">\n                    <xsl:attribute name=\"extId\">\n                        <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                    </xsl:attribute>\n                </xsl:if>\n                <xsl:if test=\"$order/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$order/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$order/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$order/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$order/DELIVERY_DATE\">\n                    <DELIVERY_DATE>\n                        <xsl:value-of select=\"$order/DELIVERY_DATE\"/>\n                    </DELIVERY_DATE>\n                </xsl:if>\n                <xsl:if test=\"$order/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$order/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\">\n                    <LGCY_ORD_NUM>\n                        <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                    </LGCY_ORD_NUM>\n                </xsl:if>\n                <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Sap_Ord_Num\">\n                    <SAP_ORD_NUM>\n                        <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Sap_Ord_Num\"/>\n                    </SAP_ORD_NUM>\n                </xsl:if>\n                <xsl:if test=\"$order/LGCY_ORD_NUM\">\n                    <OLD_LGCY_ORD_NUM>\n                        <xsl:value-of select=\"$order/LGCY_ORD_NUM\"/>\n                    </OLD_LGCY_ORD_NUM>\n                </xsl:if>\n                <xsl:if test=\"$order/ROUTE_NUM\">\n                    <ROUTE_NUM>\n                        <xsl:value-of select=\"$order/ROUTE_NUM\"/>\n                    </ROUTE_NUM>\n                </xsl:if>\n                <xsl:if test=\"$order/ORD_TYPE\">\n                    <ORD_TYPE>\n                        <xsl:value-of select=\"$order/ORD_TYPE\"/>\n                    </ORD_TYPE>\n                </xsl:if>\n                <xsl:if test=\"$order/CUST_NUM\">\n                    <CUST_NUM>\n                        <xsl:value-of select=\"$order/CUST_NUM\"/>\n                    </CUST_NUM>\n                </xsl:if>\n                <xsl:if test=\"$order/ORD_CREATIONTIME\">\n                    <ORD_CREATIONTIME>\n                        <xsl:value-of select=\"$order/ORD_CREATIONTIME\"/>\n                    </ORD_CREATIONTIME>\n                </xsl:if>\n                <xsl:if test=\"$order/DELAYED_ORD\">\n                    <DELAYED_ORD>\n                        <xsl:value-of select=\"$order/DELAYED_ORD\"/>\n                    </DELAYED_ORD>\n                </xsl:if>\n                <xsl:if test=\"$order/CASES\">\n                    <CASES>\n                        <xsl:value-of select=\"$order/CASES\"/>\n                    </CASES>\n                </xsl:if>\n                <xsl:if test=\"$order/ORD_STATUS\">\n                    <ORD_STATUS>\n                        <xsl:value-of select=\"$order/ORD_STATUS\"/>\n                    </ORD_STATUS>\n                </xsl:if>\n                <xsl:if test=\"$order/WATSSAPSLA\">\n                    <WATSSAPSLA>\n                        <xsl:value-of select=\"$order/WATSSAPSLA\"/>\n                    </WATSSAPSLA>\n                </xsl:if>\n                <xsl:if test=\"$order/SAPETMSLA\">\n                    <SAPETMSLA>\n                        <xsl:value-of select=\"$order/SAPETMSLA\"/>\n                    </SAPETMSLA>\n                </xsl:if>\n                <xsl:if test=\"$order/SAP_RECEIVED\">\n                    <SAP_RECEIVED>\n                        <xsl:value-of select=\"$order/SAP_RECEIVED\"/>\n                    </SAP_RECEIVED>\n                </xsl:if>\n                <xsl:if test=\"$order/LAST_KNOWN_SYS\">\n                    <LAST_KNOWN_SYS>\n                        <xsl:value-of select=\"$order/LAST_KNOWN_SYS\"/>\n                    </LAST_KNOWN_SYS>\n                </xsl:if>\n                <xsl:if test=\"$order/LAST_KNOWN_TIME\">\n                    <LAST_KNOWN_TIME>\n                        <xsl:value-of select=\"$order/LAST_KNOWN_TIME\"/>\n                    </LAST_KNOWN_TIME>\n                </xsl:if>\n                <xsl:if test=\"$order/TRIPID\">\n                    <TRIPID>\n                        <xsl:value-of select=\"$order/TRIPID\"/>\n                    </TRIPID>\n                </xsl:if>\n                <xsl:if test=\"$order/TRIP_STATUS\">\n                    <TRIP_STATUS>\n                        <xsl:value-of select=\"$order/TRIP_STATUS\"/>\n                    </TRIP_STATUS>\n                </xsl:if>\n                <xsl:if test=\"exists($order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SYSTEM)\">\n                    <SYSSTATE>\n                        <xsl:attribute name=\"extId\">\n                            <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/WATS,$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num)\"/>\n                        </xsl:attribute>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SEQUENCE\">\n                            <SEQUENCE>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SEQUENCE\"/>\n                            </SEQUENCE>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SYSTEM\">\n                            <SYSTEM>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SYSTEM\"/>\n                            </SYSTEM>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/IN_DATETIME\">\n                            <IN_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/IN_DATETIME\"/>\n                            </IN_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/OUT_DATETIME\">\n                            <OUT_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/OUT_DATETIME\"/>\n                            </OUT_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SLA\">\n                            <SLA>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SLA\"/>\n                            </SLA>\n                        </xsl:if>\n                        <LGCY_ORD_NUM>\n                            <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                        </LGCY_ORD_NUM>\n                    </SYSSTATE>\n                </xsl:if>\n                <xsl:if test=\"exists($order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SYSTEM)\">\n                    <SYSSTATE>\n                        <xsl:attribute name=\"extId\">\n                            <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/SAP,$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num)\"/>\n                        </xsl:attribute>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SEQUENCE\">\n                            <SEQUENCE>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SEQUENCE\"/>\n                            </SEQUENCE>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SYSTEM\">\n                            <SYSTEM>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SYSTEM\"/>\n                            </SYSTEM>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/IN_DATETIME\">\n                            <IN_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/IN_DATETIME\"/>\n                            </IN_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/OUT_DATETIME\">\n                            <OUT_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/OUT_DATETIME\"/>\n                            </OUT_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SLA\">\n                            <SLA>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SLA\"/>\n                            </SLA>\n                        </xsl:if>\n                        <LGCY_ORD_NUM>\n                            <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                        </LGCY_ORD_NUM>\n                    </SYSSTATE>\n                </xsl:if>\n                <xsl:if test=\"exists($order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SYSTEM)\">\n                    <SYSSTATE>\n                        <xsl:attribute name=\"extId\">\n                            <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/PWM,$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num)\"/>\n                        </xsl:attribute>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SEQUENCE\">\n                            <SEQUENCE>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SEQUENCE\"/>\n                            </SEQUENCE>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SYSTEM\">\n                            <SYSTEM>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SYSTEM\"/>\n                            </SYSTEM>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/IN_DATETIME\">\n                            <IN_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/IN_DATETIME\"/>\n                            </IN_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/OUT_DATETIME\">\n                            <OUT_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/OUT_DATETIME\"/>\n                            </OUT_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SLA\">\n                            <SLA>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/PWM]/SLA\"/>\n                            </SLA>\n                        </xsl:if>\n                        <LGCY_ORD_NUM>\n                            <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                        </LGCY_ORD_NUM>\n                    </SYSSTATE>\n                </xsl:if>\n                <xsl:if test=\"exists($order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SYSTEM)\">\n                    <SYSSTATE>\n                        <xsl:attribute name=\"extId\">\n                            <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/ETM-GOA,$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num)\"/>\n                        </xsl:attribute>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SEQUENCE\">\n                            <SEQUENCE>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SEQUENCE\"/>\n                            </SEQUENCE>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SYSTEM\">\n                            <SYSTEM>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SYSTEM\"/>\n                            </SYSTEM>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/IN_DATETIME\">\n                            <IN_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/IN_DATETIME\"/>\n                            </IN_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/OUT_DATETIME\">\n                            <OUT_DATETIME>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/OUT_DATETIME\"/>\n                            </OUT_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SLA\">\n                            <SLA>\n                                <xsl:value-of select=\"$order/SYSSTATE[SYSTEM=$globalVariables/OrderSystems/ActualSystems/ETM-GOA]/SLA\"/>\n                            </SLA>\n                        </xsl:if>\n                        <LGCY_ORD_NUM>\n                            <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                        </LGCY_ORD_NUM>\n                    </SYSSTATE>\n                </xsl:if>\n                <xsl:if test=\"$order/E2ESLA\">\n                    <E2ESLA>\n                        <xsl:value-of select=\"$order/E2ESLA\"/>\n                    </E2ESLA>\n                </xsl:if>\n                <xsl:if test=\"$order/CANCELLED_ORDER\">\n                    <CANCELLED_ORDER>\n                        <xsl:value-of select=\"$order/CANCELLED_ORDER\"/>\n                    </CANCELLED_ORDER>\n                </xsl:if>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
					Instance.deleteInstance(order);
					order_SysState=Instance.PropertyArray.toArrayContainedConcept(newOrder.SYSSTATE);
					pwm_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(order_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,pwm/*system String */);
	
				}
				 
				Concepts.ORDER_SYSSTATE wats_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(order_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,wats/*system String */);
				Concepts.ORDER_SYSSTATE sap_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(order_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,sap/*system String */);
				long pwmOutTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $orderEvent/payload/xsd2:ORDER/xsd2:JMSDateTime)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>"));
				String pwmSLA="EVAL",previous_E2ESLA=order.E2ESLA;
			
				//############################Checking if PWM-IN is received############################
				if(pwm_SysState!=null && pwm_SysState.IN_DATETIME!=null)
				{
					long pwmInTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $pwm_SysState/IN_DATETIME)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>pwm_SysState</variable>\n    </variables>\n</xpath>"));
					long actualDelay=pwmOutTime-pwmInTime;
					long expectedLateDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/PWM_SLA",10000);
					
					if(actualDelay<=expectedLateDelay)
					{
						pwmSLA=System.getGlobalVariableAsString("SLA/STATUS/SUCCESS","PASS");
					}
					else
					{
						pwmSLA=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");
					}
					System.debugOut("Calculated PWM system SLA and set the status = "+pwmSLA);
						
				}
				
				//############################Calculate E2E delay and set the E2ESLA status############################
				if(newOrder.ORD_TYPE==HH)
				{
					//Checking if WATS-IN is received.
					if(wats_SysState!=null && wats_SysState.IN_DATETIME!=null)
					{
						long etmGoaInTime=pwmOutTime;
						long watsInTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $wats_SysState/IN_DATETIME)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>wats_SysState</variable>\n    </variables>\n</xpath>"));
						long actualDelay=etmGoaInTime-watsInTime;
						long expectedDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/ORDER_E2ESLA",30000);
						
						if(actualDelay>expectedDelay)
						{
							newOrder.E2ESLA=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");
						}
						else
						{
							newOrder.E2ESLA=System.getGlobalVariableAsString("SLA/STATUS/SUCCESS","PASS");
						}	
						System.debugOut("Calculated E2ESLA and set the status = "+newOrder.E2ESLA);			
					}
					
					if(sap_SysState!=null && sap_SysState.IN_DATETIME!=null)
					{
						long etmGoaInTime=pwmOutTime;
						long sapOutTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $sap_SysState/IN_DATETIME)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>sap_SysState</variable>\n    </variables>\n</xpath>"));
						long actualDelay=etmGoaInTime-sapOutTime;
						long expectedLateDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/SAPETMLATE",20000);
						long expectedFailDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/SAPETMFAIL",30000);
						
						if(actualDelay<=expectedLateDelay)
						{
							newOrder.SAPETMSLA=System.getGlobalVariableAsString("SLA/STATUS/SUCCESS","PASS");
						}
						else if(actualDelay<=expectedFailDelay)
						{
							newOrder.SAPETMSLA=System.getGlobalVariableAsString("SLA/STATUS/FIRSTFAIL","LATE");
						}
						else
						{
							newOrder.SAPETMSLA=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");					
						}
						System.debugOut("Calculated SAP-ETM-SLA delay and set the status = "+newOrder.SAPETMSLA);		
					}
				}
				else
				{
					//Checking if SAP-OUT is received.
					if(newOrder.ORD_TYPE==manual && sap_SysState!=null && sap_SysState.OUT_DATETIME!=null)
					{
						long etmGoaInTime=pwmOutTime;
						long sapOutTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $sap_SysState/OUT_DATETIME)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>sap_SysState</variable>\n    </variables>\n</xpath>"));
						long actualDelay=etmGoaInTime-sapOutTime;
						long expectedDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/MANUAL_E2ESLA",25000);
						
						if(actualDelay>expectedDelay)
						{
							newOrder.E2ESLA=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");
						}
						else
						{
							newOrder.E2ESLA=System.getGlobalVariableAsString("SLA/STATUS/SUCCESS","PASS");
						}	
						System.debugOut("Calculated E2ESLA and set the status = "+newOrder.E2ESLA);			
					}
				}
				
				
				//############################Updating Order concept############################
				{
					//Updating pwm_SysState.
					if(pwm_SysState==null)
					{
						//Creating SysState concept instance.
						pwm_SysState=Instance.createInstance("xslt://{{/Concepts/ORDER_SYSSTATE}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"newOrder\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:param name=\"pwmSLA\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/PWM,$newOrder/LGCY_ORD_NUM)\"/>\n                </xsl:attribute>\n                <SEQUENCE>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/SystemSequence/PWM\"/>\n                </SEQUENCE>\n                <SYSTEM>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/PWM\"/>\n                </SYSTEM>\n                <OUT_DATETIME>\n                    <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:JMSDateTime\"/>\n                </OUT_DATETIME>\n                <SLA>\n                    <xsl:value-of select=\"$pwmSLA\"/>\n                </SLA>\n                <LGCY_ORD_NUM>\n                    <xsl:value-of select=\"$newOrder/LGCY_ORD_NUM\"/>\n                </LGCY_ORD_NUM>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
						Instance.PropertyArray.appendContainedConcept(newOrder.SYSSTATE,pwm_SysState ,System.currentTimeMillis());
						System.debugOut("Created SysState concept instance for PWM");	
					}
					else
					{
						int pwmIndex=Instance.PropertyArray.indexOfContainedConcept(newOrder.SYSSTATE,pwm_SysState);
						newOrder.SYSSTATE[pwmIndex].OUT_DATETIME=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:JMSDateTime</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>");
						newOrder.SYSSTATE[pwmIndex].SLA=pwmSLA;
					}
					//Updating goa_SysState.
					Concepts.ORDER_SYSSTATE goa_SysState=Instance.createInstance("xslt://{{/Concepts/ORDER_SYSSTATE}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"newOrder\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/ETM-GOA, $newOrder/LGCY_ORD_NUM)\"/>\n                </xsl:attribute>\n                <SEQUENCE>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/SystemSequence/ETM-GOA\"/>\n                </SEQUENCE>\n                <SYSTEM>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/ETM-GOA\"/>\n                </SYSTEM>\n                <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:JMSDateTime\">\n                    <IN_DATETIME>\n                        <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:JMSDateTime\"/>\n                    </IN_DATETIME>\n                </xsl:if>\n                <SLA>\n                    <xsl:value-of select=\"$globalVariables/SLA/STATUS/INITIAL\"/>\n                </SLA>\n                <LGCY_ORD_NUM>\n                    <xsl:value-of select=\"$newOrder/LGCY_ORD_NUM\"/>\n                </LGCY_ORD_NUM>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
					Instance.PropertyArray.appendContainedConcept(newOrder.SYSSTATE,goa_SysState ,System.currentTimeMillis());
					if(newOrder.LAST_KNOWN_SYS!=etm_Goa)
					{
						newOrder.LAST_KNOWN_SYS=etm_Goa;
						newOrder.LAST_KNOWN_TIME=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:JMSDateTime</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>");
					}
					newOrder.CASES=XPath.evalAsInt("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:Cases</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>");
					newOrder.ORD_STATUS=true;
					newOrder.SAP_ORD_NUM=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderEvent/payload/xsd2:ORDER/xsd2:Sap_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderEvent</variable>\n    </variables>\n</xpath>");
				}
				
				//############################Checking if SAP OUT event is received to update Summary############################
				if(newOrder.SAP_RECEIVED && !(newOrder.CANCELLED_ORDER))
				{
					//Updating PWM_ORD_CNT,GOA_ORD_CNT, TOTAL_CASES, E2ESLA, PWM_SLA. 
					Events.Internal.PlantSummaryEvent plantSummaryEvent=Event.createEvent("xslt://{{/Events/Internal/PlantSummaryEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:param name=\"newOrder\"/>\n    <xsl:param name=\"pwm_SysState\"/>\n    <xsl:param name=\"previous_E2ESLA\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/EXTIDS/PLANT_SUMMARY, $orderEvent/payload/ns:ORDER/ns:Plant_Num,$orderEvent/payload/ns:ORDER/ns:JMSDateTime)\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$newOrder/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$newOrder/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$newOrder/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$newOrder/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$newOrder/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$newOrder/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <ORD_TRIPPED_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_TRIPPED_CNT>\n                <ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_CNT>\n                <DELAYED_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </DELAYED_ORD_CNT>\n                <MANUAL_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </MANUAL_ORD_CNT>\n                <WATS_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </WATS_ORD_CNT>\n                <SAP_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </SAP_ORD_CNT>\n                <PWM_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($pwm_SysState/IN_DATETIME)=0) then 1 else 0\"/>\n                </PWM_ORD_CNT>\n                <GOA_ORD_CNT>\n                    <xsl:value-of select=\"1\"/>\n                </GOA_ORD_CNT>\n                <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Cases\">\n                    <TOTAL_CASES_CNT>\n                        <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Cases\"/>\n                    </TOTAL_CASES_CNT>\n                </xsl:if>\n                <TM_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </TM_TRIP_CNT>\n                <ETM_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ETM_TRIP_CNT>\n                <SAP_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </SAP_TRIP_CNT>\n                <PWM_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </PWM_TRIP_CNT>\n                <E2ESLA_MISS_ORD_CNT>\n                    <xsl:value-of select=\"if(($previous_E2ESLA=$globalVariables/SLA/STATUS/SECONDFAIL) and ($newOrder/E2ESLA=$globalVariables/SLA/STATUS/SUCCESS)) &#xA;then -1 &#xA;else if(($previous_E2ESLA!=$globalVariables/SLA/STATUS/SECONDFAIL) and ($newOrder/E2ESLA=$globalVariables/SLA/STATUS/SECONDFAIL)) &#xA;then 1 else 0\"/>\n                </E2ESLA_MISS_ORD_CNT>\n                <E2ESLA_MISS_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </E2ESLA_MISS_TRIP_CNT>\n                <ORD_WATS_SLA_MISS_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_WATS_SLA_MISS_CNT>\n                <ORD_SAP_SLA_MISS_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_SAP_SLA_MISS_CNT>\n                <ORD_PWM_SLA_MISS_CNT>\n                    <xsl:value-of select=\"if(string-length($pwm_SysState/SLA)!=0 and $pwm_SysState/SLA=$globalVariables/SLA/STATUS/SECONDFAIL)&#xA;then 1 else 0\"/>\n                </ORD_PWM_SLA_MISS_CNT>\n                <WATS_IN_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </WATS_IN_ORD_CNT>\n                <WATS_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </WATS_OUT_ORD_CNT>\n                <SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </SAP_OUT_ORD_CNT>\n                <HH_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </HH_SAP_OUT_ORD_CNT>\n                <CANCELLED_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </CANCELLED_SAP_OUT_ORD_CNT>\n                <PWM_IN_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </PWM_IN_ORD_CNT>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
					Event.sendEvent(plantSummaryEvent);
					System.debugOut("Triggered Plant Summary Event");
				}
						
			}
		}
		catch(Exception e)
		{
			String message="Exception caught in processing PWMOUTOrderUpdation rule = ";
			System.debugOut(message+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"message\"/>\n    <xsl:param name=\"order\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$message\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$order/PLANT_NUM\">\n                                <ns:BusinessID>\n                                    <xsl:value-of select=\"$order/PLANT_NUM\"/>\n                                </ns:BusinessID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($orderEvent/payload)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
			
		finally
		{
			//End Logging.
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"orderEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/OrderFlow\"/>\n                            </ns1:TransactionType>\n                            <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\">\n                                <ns1:TransactionID>\n                                    <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Lgcy_Ord_Num\"/>\n                                </ns1:TransactionID>\n                            </xsl:if>\n                            <xsl:if test=\"$orderEvent/payload/ns:ORDER/ns:Plant_Num\">\n                                <ns1:BusinessID>\n                                    <xsl:value-of select=\"$orderEvent/payload/ns:ORDER/ns:Plant_Num\"/>\n                                </ns1:BusinessID>\n                            </xsl:if>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Completed processing Order Event at &quot;,$orderEvent/payload/ns:ORDER/ns:System)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($orderEvent)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting the Order Event.
			Event.consumeEvent(orderEvent);
		}
		
	}
}