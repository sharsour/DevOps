/**
 * @description This rule updates the OrderReNum concept and corresponding Order concepts.
 * @author HYDPCM228839D
 */
rule Rules.OrderFlow.OrderReNumUpdation {
	attribute {
		priority = 1;
		forwardChain = true;
	}
	declare {
		Events.Input.OrderRenumberEvent orderReNumEvent;
		Concepts.ORDER_RE_NUM ordReNum;
	}
	when {
		
	}
	then {
		System.debugOut("In OrderReNumUpdation rule");
		
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"orderReNumEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/OrderReNum\"/>\n                            </ns1:TransactionType>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Started  Renumbering for &quot;,$orderReNumEvent/payload/ns:ORDERRenum/ns:Lgcy_Ord_Num)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($orderReNumEvent/payload)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			String old_Lgcy_Ord_Num=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderReNumEvent/payload/xsd2:ORDERRenum/xsd2:Lgcy_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderReNumEvent</variable>\n    </variables>\n</xpath>");
			String new_Lgcy_Ord_Num=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderReNumEvent/payload/xsd2:ORDERRenum/xsd2:RenumNew_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderReNumEvent</variable>\n    </variables>\n</xpath>");
			String sap_Ord_Num=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderReNumEvent/payload/xsd2:ORDERRenum/xsd2:Sap_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderReNumEvent</variable>\n    </variables>\n</xpath>");
			boolean updateSystemSummary=false;
			
			
			//Checking if old_Lgcy_Ord_Num is already present in OrderReNum concept.
			int index=Instance.PropertyArray.indexOfString(ordReNum.OLD_ORD_NUM,old_Lgcy_Ord_Num); 
			if(index!=-1)
			{
				System.debugOut("Order Num = "+old_Lgcy_Ord_Num+" is already sent by DRF");
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"orderReNumEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/EXTIDS/ORD_RE_NUM\"/>\n                            </ns:TransactionType>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/ErrorCodes/OrderAlreadyExists/code\"/>\n                        </ns:Code>\n                        <ns:Message>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/ErrorCodes/OrderAlreadyExists/message\"/>\n                        </ns:Message>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($orderReNumEvent)\"/>\n                        </ns:TransactionData>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			else
			{
				//Updating the OrderReNum concept.
				Instance.PropertyArray.appendString(ordReNum.OLD_ORD_NUM,old_Lgcy_Ord_Num,System.currentTimeMillis());
				Instance.PropertyArray.appendString(ordReNum.NEW_ORD_NUM,new_Lgcy_Ord_Num,System.currentTimeMillis());
				Instance.PropertyArray.appendString(ordReNum.SAP_ORD_NUM,sap_Ord_Num,System.currentTimeMillis());
				
				
				//Retrieving Old & New Order concepts from memory.
				Concepts.ORDERS oldOrder=Instance.getByExtIdByUri(old_Lgcy_Ord_Num,"/Concepts/ORDERS");
				Concepts.ORDERS newOrder=Instance.getByExtIdByUri(new_Lgcy_Ord_Num,"/Concepts/ORDERS");
				
				//Getting SysStates of New order if exists
				String wats=System.getGlobalVariableAsString("OrderSystems/ActualSystems/WATS","WATS");
				String sap=System.getGlobalVariableAsString("OrderSystems/ActualSystems/SAP","SAP");
				String pwm=System.getGlobalVariableAsString("OrderSystems/ActualSystems/PWM","PWM");
				String etmGoa=System.getGlobalVariableAsString("OrderSystems/ActualSystems/ETM-GOA","ETM-GOA");
				Concepts.ORDER_SYSSTATE [] oldOrder_SysState;
				Concepts.ORDER_SYSSTATE old_Wats_SysState;
				Concepts.ORDER_SYSSTATE old_Sap_SysState;
				if(oldOrder!=null)
				{
					oldOrder_SysState=Instance.PropertyArray.toArrayContainedConcept(oldOrder.SYSSTATE);		
					old_Wats_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(oldOrder_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,wats/*system String */);
					old_Sap_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(oldOrder_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,sap/*system String */);
				}
				
				//Getting SysStates of New order if exists
				Concepts.ORDER_SYSSTATE [] newOrder_SysState;
				Concepts.ORDER_SYSSTATE new_Sap_SysState,new_Pwm_SysState,new_EtmGoa_SysState;
				Concepts.ORDER_SYSSTATE new_Wats_SysState=null;
				if(newOrder!=null)
				{
					newOrder_SysState=Instance.PropertyArray.toArrayContainedConcept(newOrder.SYSSTATE);
					new_Sap_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(newOrder_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,sap/*system String */);
					new_Pwm_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(newOrder_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,pwm/*system String */);
					new_EtmGoa_SysState=RuleFunctions.Inference.OrderFlowRF.getOrderSysState(newOrder_SysState/*order_SysSyate Concepts.ORDER_SYSSTATE[] */,etmGoa/*system String */);
				}
				
				
				//Updating the corresponding Order concepts.
				if((newOrder!=null) && (oldOrder!=null))//When both oldOrder & newOrder concepts are present in memory.
				{
					//Updating New Order with Old Order data.
					newOrder.CUST_NUM			=	oldOrder.CUST_NUM;
					newOrder.ORD_CREATIONTIME	=	oldOrder.ORD_CREATIONTIME;
					newOrder.ORD_TYPE			=	oldOrder.ORD_TYPE;
					newOrder.ROUTE_NUM			=	oldOrder.ROUTE_NUM;
					newOrder.SAPETMSLA			=	oldOrder.SAPETMSLA;
					newOrder.WATSSAPSLA			=	oldOrder.WATSSAPSLA;
					if(oldOrder.SHIP_DATE!=null && newOrder.SHIP_DATE==null)
					{
						newOrder.SHIP_DATE		=	oldOrder.SHIP_DATE;
					}
					if(oldOrder.SAP_ORD_NUM!=null && newOrder.SAP_ORD_NUM==null)
					{
						newOrder.SAP_ORD_NUM	=	oldOrder.SAP_ORD_NUM;
					}
					
					 
					
					if(old_Wats_SysState!=null)
					{
						new_Wats_SysState=Instance.createInstance("xslt://{{/Concepts/ORDER_SYSSTATE}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"new_Lgcy_Ord_Num\"/>\n    <xsl:param name=\"old_Wats_SysState\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/WATS,$new_Lgcy_Ord_Num)\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$old_Wats_SysState/SEQUENCE\">\n                    <SEQUENCE>\n                        <xsl:value-of select=\"$old_Wats_SysState/SEQUENCE\"/>\n                    </SEQUENCE>\n                </xsl:if>\n                <xsl:if test=\"$old_Wats_SysState/SYSTEM\">\n                    <SYSTEM>\n                        <xsl:value-of select=\"$old_Wats_SysState/SYSTEM\"/>\n                    </SYSTEM>\n                </xsl:if>\n                <xsl:if test=\"$old_Wats_SysState/IN_DATETIME\">\n                    <IN_DATETIME>\n                        <xsl:value-of select=\"$old_Wats_SysState/IN_DATETIME\"/>\n                    </IN_DATETIME>\n                </xsl:if>\n                <xsl:if test=\"$old_Wats_SysState/OUT_DATETIME\">\n                    <OUT_DATETIME>\n                        <xsl:value-of select=\"$old_Wats_SysState/OUT_DATETIME\"/>\n                    </OUT_DATETIME>\n                </xsl:if>\n                <xsl:if test=\"$old_Wats_SysState/SLA\">\n                    <SLA>\n                        <xsl:value-of select=\"$old_Wats_SysState/SLA\"/>\n                    </SLA>\n                </xsl:if>\n                <LGCY_ORD_NUM>\n                    <xsl:value-of select=\"$new_Lgcy_Ord_Num\"/>\n                </LGCY_ORD_NUM>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
						Instance.PropertyArray.appendContainedConcept(newOrder.SYSSTATE,new_Wats_SysState,DateTime.getTimeInMillis(DateTime.now()));
						
					}
					if((new_Sap_SysState!=null) && (old_Sap_SysState!=null))
					{
						int sapIndex=Instance.PropertyArray.indexOfContainedConcept(newOrder.SYSSTATE,new_Sap_SysState);
						newOrder.SYSSTATE[sapIndex].IN_DATETIME=old_Sap_SysState.IN_DATETIME;
						System.debugOut("SAP in time updated");
						
					}
					else if((new_Sap_SysState==null) && (old_Sap_SysState!=null))
					{
						if(old_Sap_SysState.OUT_DATETIME!=null)
						{
							updateSystemSummary=true;
						}
						
						new_Sap_SysState=Instance.createInstance("xslt://{{/Concepts/ORDER_SYSSTATE}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"new_Lgcy_Ord_Num\"/>\n    <xsl:param name=\"old_Sap_SysState\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/SAP,$new_Lgcy_Ord_Num)\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$old_Sap_SysState/SEQUENCE\">\n                    <SEQUENCE>\n                        <xsl:value-of select=\"$old_Sap_SysState/SEQUENCE\"/>\n                    </SEQUENCE>\n                </xsl:if>\n                <xsl:if test=\"$old_Sap_SysState/SYSTEM\">\n                    <SYSTEM>\n                        <xsl:value-of select=\"$old_Sap_SysState/SYSTEM\"/>\n                    </SYSTEM>\n                </xsl:if>\n                <xsl:if test=\"$old_Sap_SysState/IN_DATETIME\">\n                    <IN_DATETIME>\n                        <xsl:value-of select=\"$old_Sap_SysState/IN_DATETIME\"/>\n                    </IN_DATETIME>\n                </xsl:if>\n                <xsl:if test=\"$old_Sap_SysState/OUT_DATETIME\">\n                    <OUT_DATETIME>\n                        <xsl:value-of select=\"$old_Sap_SysState/OUT_DATETIME\"/>\n                    </OUT_DATETIME>\n                </xsl:if>\n                <xsl:if test=\"$old_Sap_SysState/SLA\">\n                    <SLA>\n                        <xsl:value-of select=\"$old_Sap_SysState/SLA\"/>\n                    </SLA>\n                </xsl:if>\n                <LGCY_ORD_NUM>\n                    <xsl:value-of select=\"$new_Lgcy_Ord_Num\"/>\n                </LGCY_ORD_NUM>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
						Instance.PropertyArray.appendContainedConcept(newOrder.SYSSTATE,new_Sap_SysState,DateTime.getTimeInMillis(DateTime.now()));
					}
					else
					{
						System.debugOut("Impossible condition");
					}
					newOrder.SAP_ORD_NUM=sap_Ord_Num;
					newOrder.OLD_LGCY_ORD_NUM=old_Lgcy_Ord_Num;
					
					//Check WATS/SAP summary.
					if(newOrder.SAP_RECEIVED)
					{
						if(newOrder.SHIP_DATE!=oldOrder.SHIP_DATE && oldOrder.SHIP_DATE!=null && newOrder.SHIP_DATE!=null)
						{//If oldOrder shipDate and newOrder shipDate are different.
							//Decrement order,wats,sap count in old plant summary
							Events.Internal.PlantSummaryEvent plantSummaryEvent=Event.createEvent("xslt://{{/Events/Internal/PlantSummaryEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"oldOrder\"/>\n    <xsl:param name=\"old_Wats_SysState\"/>\n    <xsl:param name=\"old_Sap_SysState\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:if test=\"$oldOrder/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$oldOrder/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$oldOrder/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$oldOrder/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <ORD_TRIPPED_CNT>\n                    <xsl:value-of select=\"if($oldOrder/TRIP_STATUS=&quot;true&quot;) then -1 else 0\"/>\n                </ORD_TRIPPED_CNT>\n                <ORD_CNT>\n                    <xsl:value-of select=\"-1\"/>\n                </ORD_CNT>\n                <WATS_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Wats_SysState/SYSTEM)>0) then -1 else 0\"/>\n                </WATS_ORD_CNT>\n                <SAP_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Sap_SysState/SYSTEM)!=0) then -1 else 0\"/>\n                </SAP_ORD_CNT>\n                <WATS_IN_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Wats_SysState/IN_DATETIME)>0) then -1 else 0\"/>\n                </WATS_IN_ORD_CNT>\n                <WATS_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Wats_SysState/OUT_DATETIME)>0) then -1 else 0\"/>\n                </WATS_OUT_ORD_CNT>\n                <SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if($oldOrder/ORD_TYPE!=$globalVariables/OrderType/CANCELLED_ORDER and string-length($old_Sap_SysState/OUT_DATETIME)>0) then -1 else 0\"/>\n                </SAP_OUT_ORD_CNT>\n                <HH_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if($oldOrder/ORD_TYPE=$globalVariables/OrderType/HH and string-length($old_Sap_SysState/OUT_DATETIME)>0) then -1 else 0\"/>\n                </HH_SAP_OUT_ORD_CNT>\n                <CANCELLED_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if($oldOrder/ORD_TYPE=$globalVariables/OrderType/CANCELLED_ORDER and string-length($old_Sap_SysState/OUT_DATETIME)>0) then -1 else 0\"/>\n                </CANCELLED_SAP_OUT_ORD_CNT>\n                <PWM_IN_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </PWM_IN_ORD_CNT>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
							Event.sendEvent(plantSummaryEvent);
							
							//Increment wats count in new plant summary
							Events.Internal.PlantSummaryEvent newplantSummaryEvent=Event.createEvent("xslt://{{/Events/Internal/PlantSummaryEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"newOrder\"/>\n    <xsl:param name=\"oldOrder\"/>\n    <xsl:param name=\"old_Wats_SysState\"/>\n    <xsl:param name=\"updateSystemSummary\"/>\n    <xsl:param name=\"new_Pwm_SysState\"/>\n    <xsl:param name=\"new_EtmGoa_SysState\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:if test=\"$newOrder/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$newOrder/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$newOrder/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$newOrder/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$newOrder/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$newOrder/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <ORD_TRIPPED_CNT>\n                    <xsl:value-of select=\"if($oldOrder/TRIP_STATUS=&quot;true&quot; and $newOrder/TRIP_STATUS!=&quot;true&quot;) then 1 else 0\"/>\n                </ORD_TRIPPED_CNT>\n                <WATS_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Wats_SysState/SYSTEM)>0) then 1 else 0\"/>\n                </WATS_ORD_CNT>\n                <PWM_ORD_CNT>\n                    <xsl:value-of select=\"if($updateSystemSummary=&quot;true&quot;and string-length($new_Pwm_SysState/SYSTEM)!=0) then 1 else 0\"/>\n                </PWM_ORD_CNT>\n                <GOA_ORD_CNT>\n                    <xsl:value-of select=\"if($updateSystemSummary=&quot;true&quot; and string-length($new_EtmGoa_SysState/SYSTEM)!=0) then 1 else 0\"/>\n                </GOA_ORD_CNT>\n                <WATS_IN_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Wats_SysState/IN_DATETIME)>0) then 1 else 0\"/>\n                </WATS_IN_ORD_CNT>\n                <WATS_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($old_Wats_SysState/OUT_DATETIME)>0) then 1 else 0\"/>\n                </WATS_OUT_ORD_CNT>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
							Event.sendEvent(newplantSummaryEvent);
						}
						else
						{//If oldOrder shipDate and newOrder shipDate are same.
							//If old_sap_Sysstate is present, decrement order,sap count, sap_Out_cnt(if both sap_received are true) in plant summary
							if(old_Sap_SysState!=null && newOrder.SHIP_DATE==oldOrder.SHIP_DATE)
							{
								Events.Internal.PlantSummaryEvent plantSummaryEvent=Event.createEvent("xslt://{{/Events/Internal/PlantSummaryEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"newOrder\"/>\n    <xsl:param name=\"oldOrder\"/>\n    <xsl:param name=\"updateSystemSummary\"/>\n    <xsl:param name=\"new_Pwm_SysState\"/>\n    <xsl:param name=\"new_EtmGoa_SysState\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:if test=\"$newOrder/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$newOrder/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$newOrder/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$newOrder/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$newOrder/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$newOrder/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <ORD_TRIPPED_CNT>\n                    <xsl:value-of select=\"if($oldOrder/TRIP_STATUS=&quot;true&quot; and $newOrder/TRIP_STATUS=&quot;true&quot;) then -1 else 0\"/>\n                </ORD_TRIPPED_CNT>\n                <ORD_CNT>\n                    <xsl:value-of select=\"-1\"/>\n                </ORD_CNT>\n                <SAP_ORD_CNT>\n                    <xsl:value-of select=\"-1\"/>\n                </SAP_ORD_CNT>\n                <PWM_ORD_CNT>\n                    <xsl:value-of select=\"if($updateSystemSummary=&quot;true&quot;and string-length($new_Pwm_SysState/SYSTEM)!=0) then 1 else 0\"/>\n                </PWM_ORD_CNT>\n                <GOA_ORD_CNT>\n                    <xsl:value-of select=\"if($updateSystemSummary=&quot;true&quot;and string-length($new_EtmGoa_SysState/SYSTEM)!=0) then 1 else 0\"/>\n                </GOA_ORD_CNT>\n                <SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if($oldOrder/SAP_RECEIVED=&quot;true&quot;) then -1 else 0\"/>\n                </SAP_OUT_ORD_CNT>\n                <HH_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"if($oldOrder/ORD_TYPE=$globalVariables/OrderType/HH and $oldOrder/SAP_RECEIVED=&quot;true&quot;) then -1 else 0\"/>\n                </HH_SAP_OUT_ORD_CNT>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
								Event.sendEvent(plantSummaryEvent);
							}
						}
						
						System.debugOut("Updated Summary");
					}
					else
					{
						//if newOrder did not receive SAP_OUT and oldOrder received SAP_OUT increment PWM and GOA counts.
						if(updateSystemSummary)
						{
							Events.Internal.PlantSummaryEvent plantSummaryEvent=Event.createEvent("xslt://{{/Events/Internal/PlantSummaryEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"oldOrder\"/>\n    <xsl:param name=\"new_Pwm_SysState\"/>\n    <xsl:param name=\"new_EtmGoa_SysState\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:if test=\"$oldOrder/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$oldOrder/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$oldOrder/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$oldOrder/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <ORD_TRIPPED_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_TRIPPED_CNT>\n                <ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_CNT>\n                <DELAYED_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </DELAYED_ORD_CNT>\n                <MANUAL_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </MANUAL_ORD_CNT>\n                <WATS_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </WATS_ORD_CNT>\n                <SAP_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </SAP_ORD_CNT>\n                <PWM_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($new_Pwm_SysState/SYSTEM)!=0) then 1 else 0\"/>\n                </PWM_ORD_CNT>\n                <GOA_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($new_EtmGoa_SysState/SYSTEM)!=0) then 1 else 0\"/>\n                </GOA_ORD_CNT>\n                <TOTAL_CASES_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </TOTAL_CASES_CNT>\n                <TM_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </TM_TRIP_CNT>\n                <ETM_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ETM_TRIP_CNT>\n                <SAP_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </SAP_TRIP_CNT>\n                <PWM_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </PWM_TRIP_CNT>\n                <E2ESLA_MISS_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </E2ESLA_MISS_ORD_CNT>\n                <E2ESLA_MISS_TRIP_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </E2ESLA_MISS_TRIP_CNT>\n                <ORD_WATS_SLA_MISS_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_WATS_SLA_MISS_CNT>\n                <ORD_SAP_SLA_MISS_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_SAP_SLA_MISS_CNT>\n                <ORD_PWM_SLA_MISS_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </ORD_PWM_SLA_MISS_CNT>\n                <WATS_IN_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </WATS_IN_ORD_CNT>\n                <WATS_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </WATS_OUT_ORD_CNT>\n                <SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </SAP_OUT_ORD_CNT>\n                <HH_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </HH_SAP_OUT_ORD_CNT>\n                <CANCELLED_SAP_OUT_ORD_CNT>\n                    <xsl:value-of select=\"0\"/>\n                </CANCELLED_SAP_OUT_ORD_CNT>\n                <PWM_IN_ORD_CNT>\n                    <xsl:value-of select=\"if(string-length($new_Pwm_SysState/IN_DATETIME)!=0) then 1 else 0\"/>\n                </PWM_IN_ORD_CNT>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
							Event.sendEvent(plantSummaryEvent);
						}
					}
					
					if(!newOrder.SAP_RECEIVED && oldOrder.SAP_RECEIVED)
					{
						newOrder.SAP_RECEIVED	=	true;
					}
					Instance.deleteInstance(oldOrder);
					System.debugOut("Updated the newOrder concept with oldOrder concept data and deleted the oldOrder concept");
					
				}
				else if((newOrder==null) && (oldOrder!=null))//happy path When only oldOrder concept is present in memory.
				{
					//Copying the existing order 
					newOrder=Instance.createInstance("xslt://{{/Concepts/ORDERS}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"orderReNumEvent\"/>\n    <xsl:param name=\"oldOrder\"/>\n    <xsl:param name=\"sap_Ord_Num\"/>\n    <xsl:param name=\"oldOrder_SysState\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"new_Lgcy_Ord_Num\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"$orderReNumEvent/payload/ns:ORDERRenum/ns:RenumNew_Ord_Num\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$oldOrder/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$oldOrder/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/PLANT_NAME\">\n                    <PLANT_NAME>\n                        <xsl:value-of select=\"$oldOrder/PLANT_NAME\"/>\n                    </PLANT_NAME>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/DELIVERY_DATE\">\n                    <DELIVERY_DATE>\n                        <xsl:value-of select=\"$oldOrder/DELIVERY_DATE\"/>\n                    </DELIVERY_DATE>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$oldOrder/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <LGCY_ORD_NUM>\n                    <xsl:value-of select=\"$orderReNumEvent/payload/ns:ORDERRenum/ns:RenumNew_Ord_Num\"/>\n                </LGCY_ORD_NUM>\n                <SAP_ORD_NUM>\n                    <xsl:value-of select=\"$sap_Ord_Num\"/>\n                </SAP_ORD_NUM>\n                <xsl:if test=\"$oldOrder/LGCY_ORD_NUM\">\n                    <OLD_LGCY_ORD_NUM>\n                        <xsl:value-of select=\"$oldOrder/LGCY_ORD_NUM\"/>\n                    </OLD_LGCY_ORD_NUM>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/ROUTE_NUM\">\n                    <ROUTE_NUM>\n                        <xsl:value-of select=\"$oldOrder/ROUTE_NUM\"/>\n                    </ROUTE_NUM>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/ORD_TYPE\">\n                    <ORD_TYPE>\n                        <xsl:value-of select=\"$oldOrder/ORD_TYPE\"/>\n                    </ORD_TYPE>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/CUST_NUM\">\n                    <CUST_NUM>\n                        <xsl:value-of select=\"$oldOrder/CUST_NUM\"/>\n                    </CUST_NUM>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/ORD_CREATIONTIME\">\n                    <ORD_CREATIONTIME>\n                        <xsl:value-of select=\"$oldOrder/ORD_CREATIONTIME\"/>\n                    </ORD_CREATIONTIME>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/DELAYED_ORD\">\n                    <DELAYED_ORD>\n                        <xsl:value-of select=\"$oldOrder/DELAYED_ORD\"/>\n                    </DELAYED_ORD>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/CASES\">\n                    <CASES>\n                        <xsl:value-of select=\"$oldOrder/CASES\"/>\n                    </CASES>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/ORD_STATUS\">\n                    <ORD_STATUS>\n                        <xsl:value-of select=\"$oldOrder/ORD_STATUS\"/>\n                    </ORD_STATUS>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/WATSSAPSLA\">\n                    <WATSSAPSLA>\n                        <xsl:value-of select=\"$oldOrder/WATSSAPSLA\"/>\n                    </WATSSAPSLA>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/SAPETMSLA\">\n                    <SAPETMSLA>\n                        <xsl:value-of select=\"$oldOrder/SAPETMSLA\"/>\n                    </SAPETMSLA>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/SAP_RECEIVED\">\n                    <SAP_RECEIVED>\n                        <xsl:value-of select=\"$oldOrder/SAP_RECEIVED\"/>\n                    </SAP_RECEIVED>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/LAST_KNOWN_SYS\">\n                    <LAST_KNOWN_SYS>\n                        <xsl:value-of select=\"$oldOrder/LAST_KNOWN_SYS\"/>\n                    </LAST_KNOWN_SYS>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/LAST_KNOWN_TIME\">\n                    <LAST_KNOWN_TIME>\n                        <xsl:value-of select=\"$oldOrder/LAST_KNOWN_TIME\"/>\n                    </LAST_KNOWN_TIME>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/TRIPID\">\n                    <TRIPID>\n                        <xsl:value-of select=\"$oldOrder/TRIPID\"/>\n                    </TRIPID>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/TRIP_STATUS\">\n                    <TRIP_STATUS>\n                        <xsl:value-of select=\"$oldOrder/TRIP_STATUS\"/>\n                    </TRIP_STATUS>\n                </xsl:if>\n                <xsl:if test=\"exists($oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS])\">\n                    <SYSSTATE>\n                        <xsl:attribute name=\"extId\">\n                            <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/WATS,$new_Lgcy_Ord_Num )\"/>\n                        </xsl:attribute>\n                        <xsl:if test=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SEQUENCE\">\n                            <SEQUENCE>\n                                <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SEQUENCE\"/>\n                            </SEQUENCE>\n                        </xsl:if>\n                        <xsl:if test=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SYSTEM\">\n                            <SYSTEM>\n                                <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SYSTEM\"/>\n                            </SYSTEM>\n                        </xsl:if>\n                        <xsl:if test=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/IN_DATETIME\">\n                            <IN_DATETIME>\n                                <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/IN_DATETIME\"/>\n                            </IN_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/OUT_DATETIME\">\n                            <OUT_DATETIME>\n                                <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/OUT_DATETIME\"/>\n                            </OUT_DATETIME>\n                        </xsl:if>\n                        <xsl:if test=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SLA\">\n                            <SLA>\n                                <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/WATS]/SLA\"/>\n                            </SLA>\n                        </xsl:if>\n                        <LGCY_ORD_NUM>\n                            <xsl:value-of select=\"$orderReNumEvent/payload/ns:ORDERRenum/ns:RenumNew_Ord_Num\"/>\n                        </LGCY_ORD_NUM>\n                    </SYSSTATE>\n                </xsl:if>\n                <xsl:if test=\"exists($oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP])\">\n                    <SYSSTATE>\n                        <xsl:attribute name=\"extId\">\n                            <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/SAP,$new_Lgcy_Ord_Num )\"/>\n                        </xsl:attribute>\n                        <SEQUENCE>\n                            <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SEQUENCE\"/>\n                        </SEQUENCE>\n                        <SYSTEM>\n                            <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SYSTEM\"/>\n                        </SYSTEM>\n                        <IN_DATETIME>\n                            <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/IN_DATETIME\"/>\n                        </IN_DATETIME>\n                        <OUT_DATETIME>\n                            <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/OUT_DATETIME\"/>\n                        </OUT_DATETIME>\n                        <SLA>\n                            <xsl:value-of select=\"$oldOrder_SysState/elements[SYSTEM=$globalVariables/OrderSystems/ActualSystems/SAP]/SLA\"/>\n                        </SLA>\n                        <LGCY_ORD_NUM>\n                            <xsl:value-of select=\"$orderReNumEvent/payload/ns:ORDERRenum/ns:RenumNew_Ord_Num\"/>\n                        </LGCY_ORD_NUM>\n                    </SYSSTATE>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/E2ESLA\">\n                    <E2ESLA>\n                        <xsl:value-of select=\"$oldOrder/E2ESLA\"/>\n                    </E2ESLA>\n                </xsl:if>\n                <xsl:if test=\"$oldOrder/CANCELLED_ORDER\">\n                    <CANCELLED_ORDER>\n                        <xsl:value-of select=\"$oldOrder/CANCELLED_ORDER\"/>\n                    </CANCELLED_ORDER>\n                </xsl:if>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
					//Deleting existing order
					Instance.deleteInstance(oldOrder);
					System.debugOut("Only oldOrder concept found old_Lgcy_Ord_Num = "+old_Lgcy_Ord_Num+" & updated with the corresponding new_LGCY_ORD_NUM = "+newOrder.LGCY_ORD_NUM);
				
				}
				else if((newOrder!=null) && (oldOrder==null))
				{
					//When only newOrder concept is present in memory.
					newOrder.OLD_LGCY_ORD_NUM=old_Lgcy_Ord_Num;
					newOrder.SAP_ORD_NUM=sap_Ord_Num;
					System.debugOut("Only newOrder concept found new_Lgcy_Ord_Num = "+new_Lgcy_Ord_Num+" & updated with the corresponding OLD_LGCY_ORD_NUM = "+newOrder.OLD_LGCY_ORD_NUM);
					
				}
				else
				{
					//When both oldOrder & newOrder concepts are not present in memory.
					System.debugOut("Both oldOrder & newOrder concepts sent by DRF are not present in memory");
					
				}
			}
		}
		catch(Exception e)
		{
			String message="Exception caught in processing OrderReNumUpdation rule  ";
			System.debugOut(message+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"message\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:param name=\"orderReNumEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$message\"/>\n                            </ns:TransactionType>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($orderReNumEvent)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
			
		finally
		{
			//End Logging.
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"orderReNumEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/OrderReNum\"/>\n                            </ns1:TransactionType>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Completed  Renumbering for &quot;,$orderReNumEvent/payload/ns:ORDERRenum/ns:Lgcy_Ord_Num)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($orderReNumEvent/payload)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting orderReNumEvent.
			Event.consumeEvent(orderReNumEvent);
		}
	}
}