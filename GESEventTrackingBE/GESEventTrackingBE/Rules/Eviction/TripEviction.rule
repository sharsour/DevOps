/**
 * @description This rule sends the trip data to BW and evicts the same from BE Cache.
 * @author HYDPCM228839D
 */
rule Rules.Eviction.TripEviction {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		Events.Eviction.TripEvictionResQ2I tripEviction;
	}
	when {
		
	}
	then {
		System.debugOut("In TripEviction rule");
		
		int noOfOrders=XPath.evalAsInt("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>count($tripEviction/payload/xsd2:TripEvictionQueryRes/xsd2:TripID)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEviction</variable>\n    </variables>\n</xpath>");
		int index;
		String tripNum;
		
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Entity_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" xmlns:ns3=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd2\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns ns3 xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"tripEviction\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Eviction\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"concat(&quot;Trip &quot;,$globalVariables/CLEparams/CLE_ComponentNames/Eviction)\"/>\n                            </ns1:TransactionType>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"&quot;Started processing Trip Eviction Request &quot;\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionAfter>\n                            <xsl:value-of select=\"string($tripEviction)\"/>\n                        </ns1:TransactionAfter>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			
			
			for(index=1;index <= noOfOrders;index++)
			{
				tripNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$tripEviction/payload/xsd2:TripEvictionQueryRes/xsd2:TripID[number($index)]</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEviction</variable>\n        <variable>index</variable>\n    </variables>\n</xpath>");
				if(tripNum!="0")
				{
					Concepts.TRIP trip=Instance.getByExtIdByUri(tripNum,"/Concepts/TRIP");
					if(trip.SHIP_DATE==null || trip.SHIP_DATE == tripEviction.SHIP_DATE)
					{
						Events.Eviction.TripEvictionRes tripEvictionRes = Event.createEvent("xslt://{{/Events/Eviction/TripEvictionRes}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd72\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"trip\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:TripEvictionRes>\n                        <ns:Plant_Num>\n                            <xsl:value-of select=\"$trip/PLANT_NUM\"/>\n                        </ns:Plant_Num>\n                        <xsl:if test=\"$trip/PLANT_NAME\">\n                            <ns:Plant_Name>\n                                <xsl:value-of select=\"$trip/PLANT_NAME\"/>\n                            </ns:Plant_Name>\n                        </xsl:if>\n                        <ns:TripID>\n                            <xsl:value-of select=\"$trip/TRIPID\"/>\n                        </ns:TripID>\n                        <ns:Ship_Date>\n                            <xsl:value-of select=\"$trip/SHIP_DATE\"/>\n                        </ns:Ship_Date>\n                        <xsl:if test=\"$trip/TRIP_STATUS\">\n                            <ns:TripStatus>\n                                <xsl:value-of select=\"$trip/TRIP_STATUS\"/>\n                            </ns:TripStatus>\n                        </xsl:if>\n                        <xsl:if test=\"$trip/CASES\">\n                            <ns:Cases>\n                                <xsl:value-of select=\"$trip/CASES\"/>\n                            </ns:Cases>\n                        </xsl:if>\n                        <xsl:if test=\"$trip/E2ESLA\">\n                            <ns:E2E_SLA>\n                                <xsl:value-of select=\"$trip/E2ESLA\"/>\n                            </ns:E2E_SLA>\n                        </xsl:if>\n                        <xsl:if test=\"$trip/LAST_KNOWN_SYSTEM\">\n                            <ns:LastKnowSystem>\n                                <xsl:value-of select=\"$trip/LAST_KNOWN_SYSTEM\"/>\n                            </ns:LastKnowSystem>\n                        </xsl:if>\n                        <xsl:if test=\"$trip/LAST_KNOWN_TIME\">\n                            <ns:LastKnowTime>\n                                <xsl:value-of select=\"$trip/LAST_KNOWN_TIME\"/>\n                            </ns:LastKnowTime>\n                        </xsl:if>\n                        <xsl:if test=\"$trip/IS_GES\">\n                            <ns:IsGES>\n                                <xsl:value-of select=\"$trip/IS_GES\"/>\n                            </ns:IsGES>\n                        </xsl:if>\n                        <ns:SAPOrder>\n                            <xsl:for-each select=\"$trip/SHIPID\">\n                                <ns:SAPOrderNumber>\n                                    <xsl:value-of select=\".\"/>\n                                </ns:SAPOrderNumber>\n                            </xsl:for-each>\n                        </ns:SAPOrder>\n                        <xsl:for-each select=\"$trip/SYSSTATE\">\n                            <ns:TripSysState>\n                                <ns:SysState_Key>\n                                    <xsl:value-of select=\"@extId\"/>\n                                </ns:SysState_Key>\n                                <ns:TripID>\n                                    <xsl:value-of select=\"TRIP_ID\"/>\n                                </ns:TripID>\n                                <xsl:if test=\"SEQUENCE\">\n                                    <ns:Sequence>\n                                        <xsl:value-of select=\"SEQUENCE\"/>\n                                    </ns:Sequence>\n                                </xsl:if>\n                                <ns:System>\n                                    <xsl:value-of select=\"SYSTEM\"/>\n                                </ns:System>\n                                <ns:InDateTime>\n                                    <xsl:value-of select=\"if(string-length(IN_DATETIME)!=0)&#xA;then IN_DATETIME&#xA;else&#xA;tib:format-dateTime(&quot;MM-dd-yyyy HH:mm:ss.SSS&quot;, tib:create-dateTime(1970,1, 1,0, 0,0))\"/>\n                                </ns:InDateTime>\n                                <ns:OutDateTime>\n                                    <xsl:value-of select=\"if(string-length(OUT_DATETIME)!=0)&#xA;then OUT_DATETIME&#xA;else&#xA;tib:format-dateTime(&quot;MM-dd-yyyy HH:mm:ss.SSS&quot;, tib:create-dateTime(1970,1, 1,0, 0,0))\"/>\n                                </ns:OutDateTime>\n                                <xsl:if test=\"SLA\">\n                                    <ns:SLA>\n                                        <xsl:value-of select=\"SLA\"/>\n                                    </ns:SLA>\n                                </xsl:if>\n                            </ns:TripSysState>\n                        </xsl:for-each>\n                    </ns:TripEvictionRes>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
						Event.Ext.sendEventImmediate(tripEvictionRes);
						Instance.deleteInstance(trip);
					}
				}
			}
			
			System.debugOut("Trip Eviction is complete");
		}
		catch(Exception e)
		{
			String message="Exception caught in processing TripEviction rule= ";
			System.debugOut(message+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"message\"/>\n    <xsl:param name=\"tripEviction\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Eviction\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$message\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$tripEviction/PLANT_NAME\">\n                                <ns:BusinessID>\n                                    <xsl:value-of select=\"$tripEviction/PLANT_NAME\"/>\n                                </ns:BusinessID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($tripEviction)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
			
		finally
		{
			
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" xmlns:ns3=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd2\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns ns3 xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"tripEviction\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Eviction\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"concat(&quot;Trip &quot;,$globalVariables/CLEparams/CLE_ComponentNames/Eviction)\"/>\n                            </ns1:TransactionType>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"&quot;Completed processing Trip Eviction Request &quot;\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionAfter>\n                            <xsl:value-of select=\"string($tripEviction)\"/>\n                        </ns1:TransactionAfter>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting tripEviction event.
			Event.consumeEvent(tripEviction);
		}
	}
}