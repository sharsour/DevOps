/**
 * @description This rule function performs pre-processor activities for common Eviction event.
 */
void rulefunction RuleFunctions.Inference.PreProcessorRF.Eviction.commonEvictionPP {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.Eviction.CommonEvictionReq commonEvictReq;
	}
	body {
		System.debugOut("In CommonEvictionPP of Inference agent");
		
		String plantNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$commonEvictReq/payload/xsd3:CommonEvictionReq/xsd3:PlantNum</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd70\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>commonEvictReq</variable>\n    </variables>\n</xpath>");
		String shipDate=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$commonEvictReq/payload/xsd3:CommonEvictionReq/xsd3:ShipDate</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd70\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>commonEvictReq</variable>\n    </variables>\n</xpath>");
		String summary=System.getGlobalVariableAsString("EXTIDS/PLANT_SUMMARY","SUMMARY");
		String ordReNumExtId=System.getGlobalVariableAsString("EXTIDS/ORD_RE_NUM","ORD_RE_NUM");
		
		//Loading PLANT_SUMMARY concept into memory.
		RuleFunctions.Inference.CommonRF.getConceptFromCache("PLANT_SUMMARY"/*conceptName String */,summary+plantNum+shipDate/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
		
		//Loading orderReNum concept into memory & Acquiring lock on ORD_RE_NUM.
		Cluster.DataGrid.Lock(ordReNumExtId,-1,false);
		Concepts.ORDER_RE_NUM orderReNum=RuleFunctions.Inference.CommonRF.getConceptFromCache("ORD_RE_NUM"/*conceptName String */,ordReNumExtId/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
		System.debugOut("Acquired lock on ORD_RE_NUM");
		
	}
}