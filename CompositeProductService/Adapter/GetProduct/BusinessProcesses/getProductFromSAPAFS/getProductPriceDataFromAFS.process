<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:pfx="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/Schemas/ACS/ACSSchema.xsd" xmlns:ns11="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.adidas.de/EAI/Audit.xsd" xmlns:ns3="http://www.tibco.com/pe/WriteToLogActivitySchema" xmlns:ns0="http://adidasGroup/schema/cdm/basicTypes/v1" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Adapter/GetProduct/Shared Resources/Schemas/CDM/IDM_PCS_PRICE_XML.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/Schemas/CDM_Latest/IDM_PCS_PRICE_XML.xsd" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="urn:sap-com:document:sap:rfc:functions" xmlns:pfx2="http://www.tibco.com/schemas/CompositeProductServiceAdapter/SharedResources/Schemas/CDM/Schema.xsd" xmlns:pfx6="http://adidasGroup.com/schema/cdm/sharedObjects/v2">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/Schemas/ACS/ACSSchema.xsd" schemaLocation="/SharedResources/Schemas/ACS/ACSSchema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/CompositeProductServiceAdapter/SharedResources/Schemas/CDM/Schema.xsd" schemaLocation="/SharedResources/Schemas/CDM/CPSM_Schema.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/SharedResources/Schemas/CDM_Latest/IDM_PCS_PRICE_XML.xsd" schemaLocation="/SharedResources/Schemas/CDM_Latest/IDM_PCS_PRICE_XML.xsd"/>
    <xsd:import namespace="urn:sap-com:document:sap:rfc:functions" schemaLocation="/Adapter/GetProduct/Shared Resources/Schemas/SAP/Z_BAPI_ZADI_PRICE_OUTBOUND.xsd"/>
    <xsd:import namespace="http://adidasGroup.com/schema/cdm/sharedObjects/v2" schemaLocation="/Adapter/GetProduct/Shared Resources/Schemas/CDM/SharedObjects/SharedObjects_v2_0.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Adapter/GetProduct/Shared Resources/Schemas/CDM/IDM_PCS_PRICE_XML.xsd"/>
    <pd:name>Adapter/GetProduct/BusinessProcesses/getProductFromSAPAFS/getProductPriceDataFromAFS.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType>
        <xsd:element name="ProductData">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="AFSPriceData" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:startType>
    <pd:startX>51</pd:startX>
    <pd:startY>119</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="exists($getErrorCode/error/errorCode)">
                    <Status>
                        <xsl:value-of select="&quot;Error&quot;"/>
                    </Status>
                </xsl:when>
                <xsl:otherwise>
                    <Status>
                        <xsl:value-of select="&quot;Success&quot;"/>
                    </Status>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="$getErrorCode/error/errorCode">
                <errorCode>
                    <xsl:value-of select="$getErrorCode/error/errorCode"/>
                </errorCode>
            </xsl:if>
            <StackTrace>
                <xsl:value-of select="$_error/ns:ErrorReport/StackTrace"/>
            </StackTrace>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Status" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StackTrace" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>671</pd:endX>
    <pd:endY>118</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1369253258313</pd:targetNamespace>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>122</pd:x>
        <pd:y>6</pd:y>
        <pd:width>462</pd:width>
        <pd:height>220</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>ParseXML</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>SendPriceCDM</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ParseXML</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>otherwise</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:description>Route only the Condition Types ZDVK to CPS and ignore others</pd:description>
            <pd:from>ParseXML</pd:from>
            <pd:to>MapToPriceCDM</pd:to>
            <pd:xpathDescription>RouteZDVKOnly_To_CPS</pd:xpathDescription>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777012</pd:lineColor>
            <pd:conditionType>xpath</pd:conditionType>
            <pd:xpath>$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KSCHL = "ZDVK" or $ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KSCHL = "ZLST"</pd:xpath>
        </pd:transition>
        <pd:transition>
            <pd:from>MapToPriceCDM</pd:from>
            <pd:to>AuditLog</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>AuditLog</pd:from>
            <pd:to>SendPriceCDM</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="ParseXML">
            <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
            <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
            <pd:x>203</pd:x>
            <pd:y>61</pd:y>
            <config>
                <inputStyle>text</inputStyle>
                <xsdVersion>default</xsdVersion>
                <validateOutput>false</validateOutput>
                <term ref="pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND"/>
            </config>
            <pd:inputBindings>
                <xmlString>
                    <xsl:value-of select="$Start/ProductData/AFSPriceData"/>
                </xmlString>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="MapToPriceCDM">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>285</pd:x>
            <pd:y>128</pd:y>
            <config>
                <element ref="pfx6:Prices"/>
            </config>
            <pd:inputBindings>
                <pfx6:Prices>
                    <xsl:for-each select="$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/T_PRICE_ITEMS/item">
                        <pfx6:priceCondition>
                            <xsl:attribute name="conditionType">
                                <xsl:value-of select="&quot;Act_RRP&quot;"/>
                            </xsl:attribute>
                            <xsl:attribute name="pricingUnit">
                                <xsl:value-of select="round(current()/ZTIB_KPEIN)"/>
                            </xsl:attribute>
                            <xsl:if test="string-length(ZTIB_LOEVM_KO)>0">
                                <xsl:attribute name="deletionFlag">
                                    <xsl:value-of select="current()/ZTIB_LOEVM_KO"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:attribute name="conditionUnit">
                                <xsl:value-of select="current()/ZTIB_KMEIN"/>
                            </xsl:attribute>
                            <pfx6:validity>
                                <xsl:attribute name="purpose">
                                    <xsl:value-of select="&quot;&quot;"/>
                                </xsl:attribute>
                                <xsl:if test="tib:create-dateTime(tib:get-year-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-month-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-day-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), 00, 00, 00)!=''">
                                    <ns0:validFrom>
                                        <xsl:value-of select="tib:create-dateTime(tib:get-year-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-month-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-day-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), 00, 00, 00)"/>
                                    </ns0:validFrom>
                                </xsl:if>
                                <xsl:if test="tib:create-dateTime(tib:get-year-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-month-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-day-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), 00, 00, 00)!=''">
                                    <ns0:validTo>
                                        <xsl:value-of select="tib:create-dateTime(tib:get-year-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-month-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), tib:get-day-from-date(../../I_ZBAPI_PRICE_01/ZTIB_DATAB), 00, 00, 00)"/>
                                    </ns0:validTo>
                                </xsl:if>
                            </pfx6:validity>
                            <pfx6:conditionCurrencyValue>
                                <xsl:if test="current()/ZTIB_KONWA">
                                    <xsl:attribute name="currency">
                                        <xsl:value-of select="current()/ZTIB_KONWA"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:value-of select="current()/ZTIB_KBETR"/>
                            </pfx6:conditionCurrencyValue>
                            <pfx6:referenceList>
                                <ns0:referenceDocument>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;grpArtNo&quot;"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="key">
                                        <xsl:value-of select="../../I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_3"/>
                                    </xsl:attribute>
                                </ns0:referenceDocument>
                                <ns0:referenceDocument>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;marketArea&quot;"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="key">
                                        <xsl:value-of select="../../I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_1"/>
                                    </xsl:attribute>
                                </ns0:referenceDocument>
                                <ns0:referenceDocument>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;marketChan&quot;"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="key">
                                        <xsl:value-of select="../../I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_2"/>
                                    </xsl:attribute>
                                </ns0:referenceDocument>
                                <ns0:referenceDocument>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;sourcingSizeCd3&quot;"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="key">
                                        <xsl:value-of select="if(string-length(../../I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_4) = 0) then &quot;NULL&quot; else &#xA;../../I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_4"/>
                                    </xsl:attribute>
                                </ns0:referenceDocument>
                                <ns0:referenceDocument>
                                    <xsl:attribute name="name">
                                        <xsl:value-of select="&quot;conditionCurr&quot;"/>
                                    </xsl:attribute>
                                    <xsl:attribute name="key">
                                        <xsl:value-of select="current()/ZTIB_KWAEH"/>
                                    </xsl:attribute>
                                </ns0:referenceDocument>
                            </pfx6:referenceList>
                        </pfx6:priceCondition>
                    </xsl:for-each>
                </pfx6:Prices>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="SendPriceCDM">
            <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
            <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
            <pd:x>489</pd:x>
            <pd:y>125</pd:y>
            <config>
                <PermittedMessageType>XML Text</PermittedMessageType>
                <SessionAttributes>
                    <transacted>false</transacted>
                    <acknowledgeMode>1</acknowledgeMode>
                    <maxSessions>1</maxSessions>
                    <destination>%%BusinessProcesses/CPSInbound/SharedProcesses/CDMDataToBE/PriceInputQueue%%</destination>
                </SessionAttributes>
                <ConfigurableHeaders>
                    <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                    <JMSExpiration>0</JMSExpiration>
                    <JMSPriority>4</JMSPriority>
                </ConfigurableHeaders>
                <ConnectionReference>/Adapter/GetProduct/Shared Resources/Connections/JMS/NPJMSConnection.sharedjmscon</ConnectionReference>
                <ApplicationProperties>/Adapter/GetProduct/Shared Resources/Schemas/Shared/ACSCatalogInfo.sharedjmsapp</ApplicationProperties>
                <InDataxsdString ref="pfx6:Prices"/>
            </config>
            <pd:inputBindings>
                <ns2:ActivityInput>
                    <OtherProperties>
                        <xsl:variable name="var_SrcSizeCD3" select="if(string-length($ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_4) = 0) then &quot;NULL&quot; else &#xA;$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_4"/>
                        <GlobalArtNr>
                            <xsl:value-of select="concat(&quot;grpArtNo.&quot;,$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_3,&quot;.marketArea.&quot;,$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_1,&quot;.marketChan.&quot;,$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_2,&quot;.prcCondType.&quot;,&quot;Act_RRP&quot;)"/>
                        </GlobalArtNr>
                        <SourceApp>
                            <xsl:value-of select="&quot;AFS&quot;"/>
                        </SourceApp>
                        <SourceTimeStamp>
                            <xsl:value-of select="current-dateTime()"/>
                        </SourceTimeStamp>
                        <xsl:if test="$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZADI_ZCOM_TICKET">
                            <SourceMsgID>
                                <xsl:value-of select="$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZADI_ZCOM_TICKET"/>
                            </SourceMsgID>
                        </xsl:if>
                        <SourceVer>
                            <xsl:value-of select="&quot;&quot;"/>
                        </SourceVer>
                        <SourceObjType>
                            <xsl:value-of select="&quot;ProductPrices&quot;"/>
                        </SourceObjType>
                    </OtherProperties>
                    <Body>
                        <xsl:copy-of select="$MapToPriceCDM/pfx6:Prices"/>
                    </Body>
                </ns2:ActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="AuditLog">
            <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
            <pd:resourceType>ae.process.subprocess</pd:resourceType>
            <pd:x>401</pd:x>
            <pd:y>124</pd:y>
            <config>
                <processName>/Base/Logging/Audit/Audit.process</processName>
            </config>
            <pd:inputBindings>
                <root>
                    <customKey>
                        <xsl:value-of select="$_processContext/ns:ProcessContext/ProcessId"/>
                    </customKey>
                    <station>
                        <xsl:value-of select="concat(&quot;PID:&quot;, $_processContext/ns:ProcessContext/ProcessId, &quot;In process getProductPriceDataFromAFS before SendPriceCDM&quot;)"/>
                    </station>
                    <attributes>
                        <name>
                            <xsl:value-of select="&quot;GrpArtNo&quot;"/>
                        </name>
                        <value>
                            <xsl:value-of select="$ParseXML/pfx3:Z_BAPI_ZADI_PRICE_OUTBOUND/I_ZBAPI_PRICE_01/ZTIB_KEY_VALUE_3"/>
                        </value>
                    </attributes>
                </root>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="getErrorCode">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>359</pd:x>
        <pd:y>310</pd:y>
        <config>
            <element>
                <xsd:element name="error">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="errorInformation" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="sourceApp" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <error>
                <errorCode>
                    <xsl:value-of select="$_error/ns:ErrorReport/MsgCode"/>
                </errorCode>
                <errorInformation>
                    <xsl:value-of select="concat(&quot;Error in process ProcessProductPriceDataFromAFS : &quot;,$_error/ns:ErrorReport/StackTrace)"/>
                </errorInformation>
                <sourceApp>
                    <xsl:value-of select="&quot;GlblArticleProcess&quot;"/>
                </sourceApp>
            </error>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>519</pd:x>
        <pd:y>310</pd:y>
        <config>
            <variableConfig>/Base/Shared Resources/Data Model/Shared Variables/AuditDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>675</pd:x>
        <pd:y>310</pd:y>
        <config>
            <processName>/Base/ExceptionHandling/SetError.process</processName>
        </config>
        <pd:inputBindings>
            <errorInfos>
                <xsl:if test="$getErrorCode/error/errorCode">
                    <errorCode>
                        <xsl:value-of select="$getErrorCode/error/errorCode"/>
                    </errorCode>
                </xsl:if>
                <xsl:if test="$getErrorCode/error/errorInformation">
                    <errorInformation>
                        <xsl:value-of select="$getErrorCode/error/errorInformation"/>
                    </errorInformation>
                </xsl:if>
                <xsl:if test="$getErrorCode/error/sourceApp">
                    <errorApplication>
                        <xsl:value-of select="$getErrorCode/error/sourceApp"/>
                    </errorApplication>
                </xsl:if>
                <processStack>
                    <xsl:value-of select="&quot;AFSProductDataToCPS&quot;"/>
                </processStack>
                <MonitoringDetails>
                    <bpName>
                        <xsl:value-of select="$GetVariable/root/ns4:AuditDetails/ns4:bpName"/>
                    </bpName>
                    <boId>
                        <xsl:value-of select="$GetVariable/root/ns4:AuditDetails/ns4:boId"/>
                    </boId>
                    <customKey>
                        <xsl:value-of select="$GetVariable/root/ns4:AuditDetails/ns4:customKey"/>
                    </customKey>
                    <sourceApp>
                        <xsl:value-of select="$GetVariable/root/ns4:AuditDetails/ns4:targetApp"/>
                    </sourceApp>
                    <targetApp>
                        <xsl:value-of select="$GetVariable/root/ns4:AuditDetails/ns4:targetApp"/>
                    </targetApp>
                </MonitoringDetails>
            </errorInfos>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>getErrorCode</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>getErrorCode</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>SetError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>