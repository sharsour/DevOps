/**
 * @description This rule sends the various Entity data to BW and evicts the same from BE Cache.
 * @author HYDPCM228839D
 */
rule Rules.Eviction.CommonEviction {
	attribute {
		priority = 5;
		forwardChain = true;
	}
	declare {
		Events.Eviction.CommonEvictionReq commonEvictReq;
	}
	when {
		
	}
	then {
		System.debugOut("In CommonEviction rule");
		
		String plantNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$commonEvictReq/payload/xsd3:CommonEvictionReq/xsd3:PlantNum</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd70\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>commonEvictReq</variable>\n    </variables>\n</xpath>");
		String shipDate=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$commonEvictReq/payload/xsd3:CommonEvictionReq/xsd3:ShipDate</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd70\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>commonEvictReq</variable>\n    </variables>\n</xpath>");
		String plantSummaryExtId=System.getGlobalVariableAsString("EXTIDS/PLANT_SUMMARY","PLANT_SUMMARY")+plantNum+shipDate;
		Concepts.PLANT_SUMMARY plantSummary=Instance.getByExtIdByUri(plantSummaryExtId,"/Concepts/PLANT_SUMMARY");;
		String ordLockExtId=System.getGlobalVariableAsString("EXTIDS/ORD_LOCK","ORD_LOCK")+plantNum+shipDate;
		Concepts.SAP_ORDER_LOCK ordLock=Instance.getByExtIdByUri(ordLockExtId,"/Concepts/SAP_ORDER_LOCK");
		String tokenExtId=System.getGlobalVariableAsString("EXTIDS/ORDER_TOKEN","ORDER_TOKEN")+plantNum+shipDate;
		Concepts.TOKEN token=Instance.getByExtIdByUri(tokenExtId,"/Concepts/TOKEN");
		String optimizationExtId=System.getGlobalVariableAsString("EXTIDS/OPTIMIZATION","OPTIMIZATION")+plantNum+shipDate;
		Concepts.OPTIMIZATION optimization=Instance.getByExtIdByUri(optimizationExtId,"/Concepts/OPTIMIZATION");
		String ordReNumExtId=System.getGlobalVariableAsString("EXTIDS/ORD_RE_NUM","ORD_RE_NUM");
		Concepts.ORDER_RE_NUM ordReNum=Instance.getByExtIdByUri(ordReNumExtId,"/Concepts/ORDER_RE_NUM");
		
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Entity_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" xmlns:ns3=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd2\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns ns3 xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"plantNum\"/>\n    <xsl:param name=\"shipDate\"/>\n    <xsl:param name=\"commonEvictReq\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Eviction\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"concat(&quot;COMMON&quot;,$globalVariables/CLEparams/CLE_ComponentNames/Eviction)\"/>\n                            </ns1:TransactionType>\n                            <ns1:BusinessID>\n                                <xsl:value-of select=\"$plantNum\"/>\n                            </ns1:BusinessID>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Started processing Common Eviction Request for PLANT_NUM = &quot;,$plantNum,&quot; on &quot;,$shipDate)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($commonEvictReq)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			if(plantSummary!=null)
			{
				Events.Eviction.SummaryEvictionRes summaryEvictRes=Event.createEvent("xslt://{{/Events/Eviction/SummaryEvictionRes}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"plantSummary\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:PlantSummaryEvictionRes>\n                        <ns:Plant_Num>\n                            <xsl:value-of select=\"$plantSummary/PLANT_NUM\"/>\n                        </ns:Plant_Num>\n                        <xsl:if test=\"$plantSummary/PLANT_NAME\">\n                            <ns:Plant_Name>\n                                <xsl:value-of select=\"$plantSummary/PLANT_NAME\"/>\n                            </ns:Plant_Name>\n                        </xsl:if>\n                        <ns:Ship_Date>\n                            <xsl:value-of select=\"$plantSummary/SHIP_DATE\"/>\n                        </ns:Ship_Date>\n                        <xsl:if test=\"$plantSummary/ORD_TRIPPED_CNT\">\n                            <ns:Ord_Tripped_Cnt>\n                                <xsl:value-of select=\"$plantSummary/ORD_TRIPPED_CNT\"/>\n                            </ns:Ord_Tripped_Cnt>\n                        </xsl:if>\n                        <ns:Ord_NotTripped_Cnt>\n                            <xsl:value-of select=\"($plantSummary/ORD_CNT + $plantSummary/MANUAL_ORD_CNT) - $plantSummary/ORD_TRIPPED_CNT\"/>\n                        </ns:Ord_NotTripped_Cnt>\n                        <xsl:if test=\"$plantSummary/ORD_CNT\">\n                            <ns:Ord_Cnt>\n                                <xsl:value-of select=\"$plantSummary/ORD_CNT\"/>\n                            </ns:Ord_Cnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/DELAYED_ORD_CNT\">\n                            <ns:DelayedOrdCnt>\n                                <xsl:value-of select=\"$plantSummary/DELAYED_ORD_CNT\"/>\n                            </ns:DelayedOrdCnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/MANUAL_ORD_CNT\">\n                            <ns:ManualOrdCnt>\n                                <xsl:value-of select=\"$plantSummary/MANUAL_ORD_CNT\"/>\n                            </ns:ManualOrdCnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/WATS_ORD_CNT\">\n                            <ns:WATSOrdCnt>\n                                <xsl:value-of select=\"$plantSummary/WATS_ORD_CNT\"/>\n                            </ns:WATSOrdCnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/SAP_ORD_CNT\">\n                            <ns:SAPOrdCnt>\n                                <xsl:value-of select=\"$plantSummary/SAP_ORD_CNT\"/>\n                            </ns:SAPOrdCnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/PWM_ORD_CNT\">\n                            <ns:PWMOrdCnt>\n                                <xsl:value-of select=\"$plantSummary/PWM_ORD_CNT\"/>\n                            </ns:PWMOrdCnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/GOA_ORD_CNT\">\n                            <ns:GOAOrdCnt>\n                                <xsl:value-of select=\"$plantSummary/GOA_ORD_CNT\"/>\n                            </ns:GOAOrdCnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/TOTAL_CASES_CNT\">\n                            <ns:TotalCases_Cnt>\n                                <xsl:value-of select=\"$plantSummary/TOTAL_CASES_CNT\"/>\n                            </ns:TotalCases_Cnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/TM_TRIP_CNT\">\n                            <ns:TM_Trip_Cnt>\n                                <xsl:value-of select=\"$plantSummary/TM_TRIP_CNT\"/>\n                            </ns:TM_Trip_Cnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/ETM_TRIP_CNT\">\n                            <ns:ETM_Trip_Cnt>\n                                <xsl:value-of select=\"$plantSummary/ETM_TRIP_CNT\"/>\n                            </ns:ETM_Trip_Cnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/SAP_TRIP_CNT\">\n                            <ns:SAP_Trip_Cnt>\n                                <xsl:value-of select=\"$plantSummary/SAP_TRIP_CNT\"/>\n                            </ns:SAP_Trip_Cnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/PWM_TRIP_CNT\">\n                            <ns:PWM_Trip_Cnt>\n                                <xsl:value-of select=\"$plantSummary/PWM_TRIP_CNT\"/>\n                            </ns:PWM_Trip_Cnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/ALL_TRIPS_AT_SITE\">\n                            <ns:AllTripsAtSite>\n                                <xsl:value-of select=\"$plantSummary/ALL_TRIPS_AT_SITE\"/>\n                            </ns:AllTripsAtSite>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/E2ESLA_MISS_ORD_CNT\">\n                            <ns:E2EMissOrderSLACnt>\n                                <xsl:value-of select=\"$plantSummary/E2ESLA_MISS_ORD_CNT\"/>\n                            </ns:E2EMissOrderSLACnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/E2ESLA_MISS_TRIP_CNT\">\n                            <ns:E2EMissTripSLACnt>\n                                <xsl:value-of select=\"$plantSummary/E2ESLA_MISS_TRIP_CNT\"/>\n                            </ns:E2EMissTripSLACnt>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/ORD_WATS_SLA_MISS_CNT\">\n                            <ns:OrdWATSSLAMissCount>\n                                <xsl:value-of select=\"$plantSummary/ORD_WATS_SLA_MISS_CNT\"/>\n                            </ns:OrdWATSSLAMissCount>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/ORD_SAP_SLA_MISS_CNT\">\n                            <ns:OrdSAPSLAMissCount>\n                                <xsl:value-of select=\"$plantSummary/ORD_SAP_SLA_MISS_CNT\"/>\n                            </ns:OrdSAPSLAMissCount>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/ORD_PWM_SLA_MISS_CNT\">\n                            <ns:OrdPWMSLAMissCount>\n                                <xsl:value-of select=\"$plantSummary/ORD_PWM_SLA_MISS_CNT\"/>\n                            </ns:OrdPWMSLAMissCount>\n                        </xsl:if>\n                        <xsl:if test=\"$plantSummary/ALL_TRIPS_AT_SITE_CHECK\">\n                            <ns:AllTripsAtSite_Check>\n                                <xsl:value-of select=\"$plantSummary/ALL_TRIPS_AT_SITE_CHECK\"/>\n                            </ns:AllTripsAtSite_Check>\n                        </xsl:if>\n                        <ns:AllTripsAtSite_Time>\n                            <xsl:value-of select=\"if(string-length($plantSummary/ALL_TRIPS_AT_SITE_TIME)>0)&#xA;then $plantSummary/ALL_TRIPS_AT_SITE_TIME&#xA;else tib:format-dateTime(&quot;MM-dd-yyyy HH:mm:ss.SSS&quot;, tib:create-dateTime(1970,1, 1,0, 0,0))\"/>\n                        </ns:AllTripsAtSite_Time>\n                    </ns:PlantSummaryEvictionRes>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
				Event.Ext.sendEventImmediate(summaryEvictRes);
				Instance.deleteInstance(plantSummary);
			}
			
			if(ordLock!=null)
			{
				Events.Eviction.OrdLockEvictionRes ordLockEvictionRes=Event.createEvent("xslt://{{/Events/Eviction/OrdLockEvictionRes}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"ordLock\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OrdLockEvictionRes>\n                        <xsl:if test=\"$ordLock/@extId\">\n                            <ns:OrdLock_Key>\n                                <xsl:value-of select=\"$ordLock/@extId\"/>\n                            </ns:OrdLock_Key>\n                        </xsl:if>\n                        <ns:Plant_Num>\n                            <xsl:value-of select=\"$ordLock/PLANT_NUM\"/>\n                        </ns:Plant_Num>\n                        <xsl:if test=\"$ordLock/PLANT_NAME\">\n                            <ns:Plant_Name>\n                                <xsl:value-of select=\"$ordLock/PLANT_NAME\"/>\n                            </ns:Plant_Name>\n                        </xsl:if>\n                        <xsl:if test=\"$ordLock/SHIP_DATE\">\n                            <ns:Ship_Date>\n                                <xsl:value-of select=\"$ordLock/SHIP_DATE\"/>\n                            </ns:Ship_Date>\n                        </xsl:if>\n                        <xsl:if test=\"$ordLock/LOCKTIMESTAMP\">\n                            <ns:DateTimeStamp>\n                                <xsl:value-of select=\"$ordLock/LOCKTIMESTAMP\"/>\n                            </ns:DateTimeStamp>\n                        </xsl:if>\n                        <xsl:if test=\"$ordLock/STATUS\">\n                            <ns:Status>\n                                <xsl:value-of select=\"$ordLock/STATUS\"/>\n                            </ns:Status>\n                        </xsl:if>\n                    </ns:OrdLockEvictionRes>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
				Event.Ext.sendEventImmediate(ordLockEvictionRes);
				Instance.deleteInstance(ordLock);
			}
			
			if(token!=null)
			{
				Events.Eviction.TokenEvictionRes tokenEvictionRes=Event.createEvent("xslt://{{/Events/Eviction/TokenEvictionRes}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"token\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OrdTokenEvictionRes>\n                        <xsl:if test=\"$token/@extId\">\n                            <ns:OrdToken_Key>\n                                <xsl:value-of select=\"$token/@extId\"/>\n                            </ns:OrdToken_Key>\n                        </xsl:if>\n                        <ns:Plant_Num>\n                            <xsl:value-of select=\"$token/PLANT_NUM\"/>\n                        </ns:Plant_Num>\n                        <xsl:if test=\"$token/PLANT_NAME\">\n                            <ns:Plant_Name>\n                                <xsl:value-of select=\"$token/PLANT_NAME\"/>\n                            </ns:Plant_Name>\n                        </xsl:if>\n                        <xsl:if test=\"$token/SHIPDATE\">\n                            <ns:Ship_Date>\n                                <xsl:value-of select=\"$token/SHIPDATE\"/>\n                            </ns:Ship_Date>\n                        </xsl:if>\n                        <xsl:if test=\"$token/TOKEN_CREATIONTIME\">\n                            <ns:CreationTime>\n                                <xsl:value-of select=\"$token/TOKEN_CREATIONTIME\"/>\n                            </ns:CreationTime>\n                        </xsl:if>\n                        <xsl:if test=\"$token/TOKEN_GOA_RECIEVETIME\">\n                            <ns:GOA_RecieveTime>\n                                <xsl:value-of select=\"$token/TOKEN_GOA_RECIEVETIME\"/>\n                            </ns:GOA_RecieveTime>\n                        </xsl:if>\n                        <xsl:if test=\"$token/STATUS\">\n                            <ns:Status>\n                                <xsl:value-of select=\"$token/STATUS\"/>\n                            </ns:Status>\n                        </xsl:if>\n                    </ns:OrdTokenEvictionRes>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
				Event.Ext.sendEventImmediate(tokenEvictionRes);
				Instance.deleteInstance(token);
			}
			
			if(optimization!=null)
			{
				Events.Eviction.OptimizationEvictionRes optimizationEvictionRes=Event.createEvent("xslt://{{/Events/Eviction/OptimizationEvictionRes}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd2\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"optimization\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OptimizationEvictionRes>\n                        <xsl:if test=\"$optimization/@extId\">\n                            <ns:Optimization_Key>\n                                <xsl:value-of select=\"$optimization/@extId\"/>\n                            </ns:Optimization_Key>\n                        </xsl:if>\n                        <ns:Plant_Num>\n                            <xsl:value-of select=\"$optimization/PLANT_NUM\"/>\n                        </ns:Plant_Num>\n                        <xsl:if test=\"$optimization/PLANT_NAME\">\n                            <ns:Plant_Name>\n                                <xsl:value-of select=\"$optimization/PLANT_NAME\"/>\n                            </ns:Plant_Name>\n                        </xsl:if>\n                        <ns:ShipDate>\n                            <xsl:value-of select=\"$optimization/SHIP_DATE\"/>\n                        </ns:ShipDate>\n                        <xsl:if test=\"$optimization/STATUS\">\n                            <ns:Optimized_Status>\n                                <xsl:value-of select=\"$optimization/STATUS\"/>\n                            </ns:Optimized_Status>\n                        </xsl:if>\n                        <xsl:if test=\"$optimization/OPTIMIZATION_TIMESTAMP\">\n                            <ns:DateTimeStamp>\n                                <xsl:value-of select=\"$optimization/OPTIMIZATION_TIMESTAMP\"/>\n                            </ns:DateTimeStamp>\n                        </xsl:if>\n                    </ns:OptimizationEvictionRes>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
				Event.Ext.sendEventImmediate(optimizationEvictionRes);
				Instance.deleteInstance(optimization);
			}
			
			if(ordReNum!=null)
			{
				int noOfOrdReNums=ordReNum.NEW_ORD_NUM@length;
				for(int index=(noOfOrdReNums-1);index>=0;index--)
				{
					String newOrdNum=ordReNum.NEW_ORD_NUM[index];
					Concepts.ORDERS order=RuleFunctions.Inference.CommonRF.getConceptFromCache("ORDER"/*conceptName String */,newOrdNum/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
					System.debugOut("No of Renumbered Orders present ="+noOfOrdReNums);
					if(order==null)
					{
						Instance.PropertyArray.removeString(ordReNum.NEW_ORD_NUM,newOrdNum);
						String oldOrdNum=ordReNum.OLD_ORD_NUM[index];
						Instance.PropertyArray.removeString(ordReNum.OLD_ORD_NUM,oldOrdNum);
						String sapOrdNum=ordReNum.SAP_ORD_NUM[index];
						Instance.PropertyArray.removeString(ordReNum.SAP_ORD_NUM,sapOrdNum);
					}	
				}
				System.debugOut("No of Renumbered Orders left ="+ordReNum.NEW_ORD_NUM@length);
			}
			
			
			System.debugOut("Common Entity Eviction is complete");
		}
		catch(Exception e)
		{
			String message="Exception caught in processing CommonEviction rule";
			System.debugOut(message+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"message\"/>\n    <xsl:param name=\"plantNum\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:param name=\"commonEvictReq\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Eviction\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$message\"/>\n                            </ns:TransactionType>\n                            <ns:BusinessID>\n                                <xsl:value-of select=\"$plantNum\"/>\n                            </ns:BusinessID>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($commonEvictReq)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
			
		finally
		{
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" xmlns:ns3=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd2\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns ns3 xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"plantNum\"/>\n    <xsl:param name=\"shipDate\"/>\n    <xsl:param name=\"commonEvictReq\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Eviction\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"concat(&quot;COMMON&quot;,$globalVariables/CLEparams/CLE_ComponentNames/Eviction)\"/>\n                            </ns1:TransactionType>\n                            <ns1:BusinessID>\n                                <xsl:value-of select=\"$plantNum\"/>\n                            </ns1:BusinessID>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Completed processing Common Eviction Request for PLANT_NUM = &quot;,$plantNum,&quot; on &quot;,$shipDate)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($commonEvictReq)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting optRequest event.
			Event.consumeEvent(commonEvictReq);
		}
	}
}