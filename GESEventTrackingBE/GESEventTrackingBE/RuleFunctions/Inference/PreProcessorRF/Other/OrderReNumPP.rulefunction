/**
 * @description This rule function acts as a pre-processor for OrderReNum events sent by DRF.
 */
void rulefunction RuleFunctions.Inference.PreProcessorRF.Other.OrderReNumPP {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.Input.OrderRenumberEvent ordReNumEvent;
	}
	body {
		System.debugOut("In OrderReNum Pre-Processor");
		
		String gesAgentId=Engine.engineName();
		String exceptionAfterGetting;
		
		
		try
		{	
			String old_Lgcy_Ord_Num=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$ordReNumEvent/payload/xsd2:ORDERRenum/xsd2:Lgcy_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>ordReNumEvent</variable>\n    </variables>\n</xpath>");
			String new_Lgcy_Ord_Num=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$ordReNumEvent/payload/xsd2:ORDERRenum/xsd2:RenumNew_Ord_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>ordReNumEvent</variable>\n    </variables>\n</xpath>");
			String ordReNumExtId=System.getGlobalVariableAsString("EXTIDS/ORD_RE_NUM","ORD_RE_NUM");
			
			//System.debugOut("Retrieved Ord Nums ");
			//Loading old_Lgcy_Ord_Num concept into memory & Acquiring lock on the old_Lgcy_Ord_Num.
			Cluster.DataGrid.Lock(old_Lgcy_Ord_Num,-1,false);
			Concepts.ORDERS oldOrder=RuleFunctions.Inference.CommonRF.getConceptFromCache("ORDER"/*conceptName String */,old_Lgcy_Ord_Num/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
			//System.debugOut("Acquired lock on oldOrder number");
			exceptionAfterGetting="old_Lgcy_Ord_Num";
			
			//Loading new_Lgcy_Ord_Num concept into memory & Acquiring lock on the new_Lgcy_Ord_Num.
			Cluster.DataGrid.Lock(new_Lgcy_Ord_Num,-1,false);
			Concepts.ORDERS newOrder=RuleFunctions.Inference.CommonRF.getConceptFromCache("ORDER"/*conceptName String */,new_Lgcy_Ord_Num/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
			//System.debugOut("Acquired lock on newOrder number");
			exceptionAfterGetting="new_Lgcy_Ord_Num";
			
			//Loading orderReNum concept into memory & Acquiring lock on ORD_RE_NUM.
			Cluster.DataGrid.Lock(ordReNumExtId,-1,false);
			Concepts.ORDER_RE_NUM orderReNum=RuleFunctions.Inference.CommonRF.getConceptFromCache("ORD_RE_NUM"/*conceptName String */,ordReNumExtId/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
			System.debugOut("Acquired lock on ORD_RE_NUM");
		}
		catch(Exception e)
		{
			System.debugOut("Exception caught in processing OrderReNum Pre-processor rule function Type= "+e@errorType+" Cause = "+e@cause);
			String message="Exception caught after retrieving = "+exceptionAfterGetting;
			System.debugOut(message);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns1=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"ordReNumEvent\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/OrderFlow\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/OrderReNum\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$ordReNumEvent/payload/ns1:ORDERRenum/ns1:RenumNew_Ord_Num\">\n                                <ns:TransactionID>\n                                    <xsl:value-of select=\"$ordReNumEvent/payload/ns1:ORDERRenum/ns1:RenumNew_Ord_Num\"/>\n                                </ns:TransactionID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($ordReNumEvent)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			Event.consumeEvent(ordReNumEvent);
			
		}
	
	}
}