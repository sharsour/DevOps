/**
 * @description This rule function performs pre-processor activities for Trip Eviction event sent by Query Agent.
 */
void rulefunction RuleFunctions.Inference.PreProcessorRF.Eviction.tripEvictionPP {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.Eviction.TripEvictionResQ2I tripEvictQueryRes;
	}
	body {
		System.debugOut("In TripEvictionPP of Inference agent");
		
		int noOfTrips=XPath.evalAsInt("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>count($tripEvictQueryRes/payload/xsd2:TripEvictionQueryRes/xsd2:TripID)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvictQueryRes</variable>\n    </variables>\n</xpath>");
		int index;
		String tripNum;
		
		for(index=1;index <= noOfTrips;index++)
		{
			tripNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$tripEvictQueryRes/payload/xsd2:TripEvictionQueryRes/xsd2:TripID[number($index)]</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvictQueryRes</variable>\n        <variable>index</variable>\n    </variables>\n</xpath>");
			if(tripNum!="0")
			{
				RuleFunctions.Inference.CommonRF.getConceptFromCache("TRIP"/*conceptName String */,tripNum/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
			}
		}
	}
}