/**
 * @description This rule function performs pre-processor activities for Lgcy Order Request Event.
 */
void rulefunction RuleFunctions.Inference.PreProcessorRF.RequestReply.lgcyOrderRequestPP {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.RequestReply.LgcyOrderRequest orderRequest;
	}
	body {
		System.debugOut("In Order Request PP");
		
		String lgcy_Ord_Num=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$orderRequest/payload/xsd2:OrderRequest/xsd2:OrderSearchRequest/xsd2:Lgcy_Order_id</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>orderRequest</variable>\n    </variables>\n</xpath>");
		Concepts.ORDERS order;	
	
		if(lgcy_Ord_Num!=null)
		{
			Cluster.DataGrid.Lock(lgcy_Ord_Num,-1,false);
			order=RuleFunctions.Inference.CommonRF.getConceptFromCache("ORDER"/*conceptName String */,lgcy_Ord_Num/*conceptExtID String */,true/*getSysStateContainedConcept boolean */);
			System.debugOut("Acquired lock on "+lgcy_Ord_Num);
		}
		else
		{
			Events.RequestReply.LgcyOrderResponse orderReply=Event.createEvent("xslt://{{/Events/RequestReply/LgcyOrderResponse}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"orderRequest\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OrderResponse>\n                        <ns:OrderSearchResponse>\n                            <xsl:if test=\"$orderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:Lgcy_Order_id\">\n                                <ns:Lgcy_Ord_Num>\n                                    <xsl:value-of select=\"$orderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:Lgcy_Order_id\"/>\n                                </ns:Lgcy_Ord_Num>\n                            </xsl:if>\n                            <ns:InDateTime>\n                                <xsl:value-of select=\"tib:create-dateTime(1970,1, 1,0, 0,0)\"/>\n                            </ns:InDateTime>\n                            <ns:OutDateTime>\n                                <xsl:value-of select=\"tib:create-dateTime(1970,1, 1,0, 0,0)\"/>\n                            </ns:OutDateTime>\n                        </ns:OrderSearchResponse>\n                    </ns:OrderResponse>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
			Event.replyEvent(orderRequest,orderReply);
			Event.consumeEvent(orderRequest);
			System.debugOut("Empty Order Number");
			
		}
		if(order==null)
		{
			Events.RequestReply.LgcyOrderResponse orderReply=Event.createEvent("xslt://{{/Events/RequestReply/LgcyOrderResponse}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"orderRequest\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OrderResponse>\n                        <ns:OrderSearchResponse>\n                            <xsl:if test=\"$orderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:Lgcy_Order_id\">\n                                <ns:Lgcy_Ord_Num>\n                                    <xsl:value-of select=\"$orderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:Lgcy_Order_id\"/>\n                                </ns:Lgcy_Ord_Num>\n                            </xsl:if>\n                            <ns:InDateTime>\n                                <xsl:value-of select=\"tib:create-dateTime(1970,1, 1,0, 0,0)\"/>\n                            </ns:InDateTime>\n                            <ns:OutDateTime>\n                                <xsl:value-of select=\"tib:create-dateTime(1970,1, 1,0, 0,0)\"/>\n                            </ns:OutDateTime>\n                        </ns:OrderSearchResponse>\n                    </ns:OrderResponse>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
			Event.replyEvent(orderRequest,orderReply);
			Event.consumeEvent(orderRequest);
			System.debugOut("Order Not Found");	
		}
		
		
	}
}