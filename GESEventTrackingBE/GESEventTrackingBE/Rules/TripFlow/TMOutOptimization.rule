/**
 * @description This rule creates/Updates the Optimization concept with the data of incoming TM-OUT Trip Event.
 * @author HYDPCM228839D
 */
rule Rules.TripFlow.TMOutOptimization {
	attribute {
		priority = 1;
		forwardChain = true;
	}
	declare {
		Events.Input.OptimizationEvent optEvent;
		Concepts.PLANT_TIMEZONE plantTZ;
	}
	when {
		
	}
	then {
		System.debugOut("In TMOutOptimization rule");
		
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Entity_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"optEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/TripFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/EXTIDS/OPTIMIZATION\"/>\n                            </ns1:TransactionType>\n                            <xsl:if test=\"$optEvent/PLANT_NUM\">\n                                <ns1:BusinessID>\n                                    <xsl:value-of select=\"$optEvent/PLANT_NUM\"/>\n                                </ns1:BusinessID>\n                            </xsl:if>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Started processing Optimization Event for plantNum =  &quot;,$optEvent/PLANT_NUM)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($optEvent)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			//Retrieve Plant Name by using Plant Number from Order Event.
			String plantNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$optEvent/PLANT_NUM</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>optEvent</variable>\n    </variables>\n</xpath>");
			String plantName=RuleFunctions.Inference.CommonRF.getPlantName(plantNum/*plantNum String */,plantTZ/*plantTZ Concepts.PLANT_TIMEZONE */);
			String fail=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");
			
			String optKey=System.getGlobalVariableAsString("EXTIDS/OPTIMIZATION","OPTIMIZATION")+optEvent.PLANT_NUM+optEvent.SHIP_DATE;
			Concepts.OPTIMIZATION optimization=Instance.getByExtIdByUri(optKey,"/Concepts/OPTIMIZATION");
			if(optimization==null)
			{
				optimization=Instance.createInstance("xslt://{{/Concepts/OPTIMIZATION}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" version=\"1.0\" exclude-result-prefixes=\"xsl xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"optKey\"/>\n    <xsl:param name=\"optEvent\"/>\n    <xsl:param name=\"plantName\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"$optKey\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$optEvent/PLANT_NUM\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$optEvent/PLANT_NUM\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <PLANT_NAME>\n                    <xsl:value-of select=\"$plantName\"/>\n                </PLANT_NAME>\n                <xsl:if test=\"$optEvent/SHIP_DATE\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$optEvent/SHIP_DATE\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <STATUS>\n                    <xsl:value-of select=\"$globalVariables/SLA/STATUS/SUCCESS\"/>\n                </STATUS>\n                <xsl:if test=\"$optEvent/JMS_TIMESTAMP\">\n                    <OPTIMIZATION_TIMESTAMP>\n                        <xsl:value-of select=\"$optEvent/JMS_TIMESTAMP\"/>\n                    </OPTIMIZATION_TIMESTAMP>\n                </xsl:if>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
				
				//Schedule an event to trigger after 10mins to check AllTripsAtSite.
				String schedulerName=System.getGlobalVariableAsString("Scheduler/SchedulerName","GESScheduler");					
				String workKeyLate=optimization@extId;
				Events.Timer.SLATimerEvent allTripsAtSiteTimerEvent=Event.createEvent("xslt://{{/Events/Timer/SLATimerEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"workKeyLate\"/>\n    <xsl:param name=\"optEvent\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"$workKeyLate\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$optEvent/LGCY_ORD_NUM\">\n                    <Ord_Num>\n                        <xsl:value-of select=\"$optEvent/LGCY_ORD_NUM\"/>\n                    </Ord_Num>\n                </xsl:if>\n                <System>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/TM\"/>\n                </System>\n                <Plant_Num>\n                    <xsl:value-of select=\"concat($optEvent/PLANT_NUM,$optEvent/SHIP_DATE)\"/>\n                </Plant_Num>\n                <Interval>\n                    <xsl:value-of select=\"$globalVariables/SLA/INTERVAL/OPT_AllTripsAtPWM\"/>\n                </Interval>\n                <TriggerCount>\n                    <xsl:value-of select=\"$globalVariables/SLA/INTERVAL/OPT_AllTripsAtPWM_Check_Count\"/>\n                </TriggerCount>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
				Long interval=System.currentTimeMillis() + System.getGlobalVariableAsLong("SLA/INTERVAL/OPT_AllTripsAtPWM",600000);
				Cluster.scheduleEvent(schedulerName,workKeyLate,allTripsAtSiteTimerEvent,interval);
				
				System.debugOut("Created Optimization and Scheduled event to check AllTripsAtSite");
				
				
			}
			else
			{
				if(optimization.STATUS==fail)
				{
					optimization.STATUS=System.getGlobalVariableAsString("SLA/STATUS/FIRSTFAIL","LATE");
					optimization.OPTIMIZATION_TIMESTAMP=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$optEvent/JMS_TIMESTAMP</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>optEvent</variable>\n    </variables>\n</xpath>");
					
					//Schedule an event to trigger after 10mins to check AllTripsAtSite.
					String schedulerName=System.getGlobalVariableAsString("Scheduler/SchedulerName","GESScheduler");					
					String workKeyLate=optimization@extId;
					Events.Timer.SLATimerEvent allTripsAtSiteTimerEvent=Event.createEvent("xslt://{{/Events/Timer/SLATimerEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"workKeyLate\"/>\n    <xsl:param name=\"optEvent\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"$workKeyLate\"/>\n                </xsl:attribute>\n                <xsl:if test=\"$optEvent/LGCY_ORD_NUM\">\n                    <Ord_Num>\n                        <xsl:value-of select=\"$optEvent/LGCY_ORD_NUM\"/>\n                    </Ord_Num>\n                </xsl:if>\n                <System>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/TM\"/>\n                </System>\n                <Plant_Num>\n                    <xsl:value-of select=\"concat($optEvent/PLANT_NUM,$optEvent/SHIP_DATE)\"/>\n                </Plant_Num>\n                <Interval>\n                    <xsl:value-of select=\"$globalVariables/SLA/INTERVAL/OPT_AllTripsAtPWM\"/>\n                </Interval>\n                <TriggerCount>\n                    <xsl:value-of select=\"$globalVariables/SLA/INTERVAL/OPT_AllTripsAtPWM_Check_Count\"/>\n                </TriggerCount>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
					Long interval=System.currentTimeMillis() + System.getGlobalVariableAsLong("SLA/INTERVAL/OPT_AllTripsAtPWM",600000);
					Cluster.scheduleEvent(schedulerName,workKeyLate,allTripsAtSiteTimerEvent,interval);
						
					//Sending the alert to business user.
					Events.Alert.Alert alert=Event.createEvent("xslt://{{/Events/Alert/Alert}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.tibco.com/schemas/GESEventsMonitoring_testing/SharedResources/SchemaDefinitions/Alerts/Schema.xsd\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"optimization\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:IndividualAlert>\n                        <xsl:if test=\"$optimization/PLANT_NUM\">\n                            <ns:Plant_Num>\n                                <xsl:value-of select=\"$optimization/PLANT_NUM\"/>\n                            </ns:Plant_Num>\n                        </xsl:if>\n                        <xsl:if test=\"$optimization/SHIP_DATE\">\n                            <ns:ShipDate>\n                                <xsl:value-of select=\"$optimization/SHIP_DATE\"/>\n                            </ns:ShipDate>\n                        </xsl:if>\n                        <ns:Entity_Type>\n                            <xsl:value-of select=\"$globalVariables/EXTIDS/OPTIMIZATION\"/>\n                        </ns:Entity_Type>\n                        <xsl:if test=\"$optimization/STATUS\">\n                            <ns:Status>\n                                <xsl:value-of select=\"$optimization/STATUS\"/>\n                            </ns:Status>\n                        </xsl:if>\n                        <ns:Time>\n                            <xsl:value-of select=\"if(string-length($optimization/OPTIMIZATION_TIMESTAMP)>0)&#xA;then $optimization/OPTIMIZATION_TIMESTAMP&#xA;else current-dateTime()\"/>\n                        </ns:Time>\n                    </ns:IndividualAlert>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
					Event.sendEvent(alert);
					
					System.debugOut("Updated Optimization and Scheduled event to check AllTripsAtSite");
					
				}
				else
				{
					System.debugOut("Optimization already done for plantNum = "+optEvent.PLANT_NUM+" & ShipDate = "+optEvent.SHIP_DATE);
				}
			}
		}
		catch(Exception e)
		{
			String message = "Exception caught in processing TMOutOptimization rule  ";
			System.debugOut(message+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"message\"/>\n    <xsl:param name=\"optEvent\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/TripFlow\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$message\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$optEvent/PLANT_NUM\">\n                                <ns:BusinessID>\n                                    <xsl:value-of select=\"$optEvent/PLANT_NUM\"/>\n                                </ns:BusinessID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($optEvent)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			Event.consumeEvent(optEvent);
		}
			
		finally
		{
			//End-Log.
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"optEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/TripFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/EXTIDS/OPTIMIZATION\"/>\n                            </ns1:TransactionType>\n                            <xsl:if test=\"$optEvent/PLANT_NUM\">\n                                <ns1:BusinessID>\n                                    <xsl:value-of select=\"$optEvent/PLANT_NUM\"/>\n                                </ns1:BusinessID>\n                            </xsl:if>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Ended processing Optimization Event for plantNum =  &quot;,$optEvent/PLANT_NUM)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($optEvent)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting the Optimization Event.
			Event.consumeEvent(optEvent);
		}
	}
}