/**
 * @description This rule function performs pre-processor activities for SAP Order Request Event.
 */
void rulefunction RuleFunctions.Query.PreProcessorRF.sapOrderRequestPP {
	attribute {
		validity = ACTION;
	}
	scope {
		Events.Query.SapOrderRequest sapOrderRequest;
	}
	body {
		System.debugOut(" In SapOrderRequestPP rule function of Query Agent");
		
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"sapOrderRequest\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Query\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"&quot;SAP ORDER SEARCH&quot;\"/>\n                            </ns1:TransactionType>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Started processing SAPOrderRequest SAP_ORD_NUM = &quot;,$sapOrderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:SAP_Order_id)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($sapOrderRequest)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			String queryName = "OrderRequest";
			String sap_Ord_Num= XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$sapOrderRequest/payload/xsd2:OrderRequest/xsd2:OrderSearchRequest/xsd2:SAP_Order_id</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>sapOrderRequest</variable>\n    </variables>\n</xpath>");
			String statementName = queryName + "-SS-" +sap_Ord_Num;
			String resultSetName = queryName + "-SS-RS-" + sap_Ord_Num;
			
			Query.Statement.open(queryName, statementName);
			Query.Statement.setVar(statementName, "sapOrdNum",sap_Ord_Num);
			
			System.debugOut("Started query: " + statementName);
			
			Query.Statement.execute(statementName, resultSetName);
			
			Concepts.ORDERS order;
			Concepts.ORDER_SYSSTATE sysState;
			
			while(Query.ResultSet.next(resultSetName))
			{
				order=Query.ResultSet.get(resultSetName, 0);
				sysState=Query.ResultSet.get(resultSetName, 1);
			}
			
			
			Events.Query.SapOrderResponse sapOrderReply;
			if(order!=null)
			{
				System.debugOut(" Retrieved order concept sap_Ord_Num= "+order.SAP_ORD_NUM);
				sapOrderReply=Event.createEvent("xslt://{{/Events/Query/SapOrderResponse}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"order\"/>\n    <xsl:param name=\"sysState\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OrderResponse>\n                        <ns:OrderSearchResponse>\n                            <xsl:if test=\"$order/LGCY_ORD_NUM\">\n                                <ns:Lgcy_Ord_Num>\n                                    <xsl:value-of select=\"$order/LGCY_ORD_NUM\"/>\n                                </ns:Lgcy_Ord_Num>\n                            </xsl:if>\n                            <xsl:if test=\"$order/SAP_ORD_NUM\">\n                                <ns:Sap_Ord_Num>\n                                    <xsl:value-of select=\"$order/SAP_ORD_NUM\"/>\n                                </ns:Sap_Ord_Num>\n                            </xsl:if>\n                            <xsl:if test=\"$order/ROUTE_NUM\">\n                                <ns:Route_Num>\n                                    <xsl:value-of select=\"$order/ROUTE_NUM\"/>\n                                </ns:Route_Num>\n                            </xsl:if>\n                            <xsl:if test=\"$order/CUST_NUM\">\n                                <ns:CustNum>\n                                    <xsl:value-of select=\"$order/CUST_NUM\"/>\n                                </ns:CustNum>\n                            </xsl:if>\n                            <xsl:if test=\"$order/PLANT_NUM\">\n                                <ns:Plant_Num>\n                                    <xsl:value-of select=\"$order/PLANT_NUM\"/>\n                                </ns:Plant_Num>\n                            </xsl:if>\n                            <xsl:if test=\"$order/PLANT_NAME\">\n                                <ns:Plant_Name>\n                                    <xsl:value-of select=\"$order/PLANT_NAME\"/>\n                                </ns:Plant_Name>\n                            </xsl:if>\n                            <xsl:if test=\"$order/DELIVERY_DATE\">\n                                <ns:Delivery_Date>\n                                    <xsl:value-of select=\"$order/DELIVERY_DATE\"/>\n                                </ns:Delivery_Date>\n                            </xsl:if>\n                            <xsl:if test=\"$order/SHIP_DATE\">\n                                <ns:Ship_Date>\n                                    <xsl:value-of select=\"$order/SHIP_DATE\"/>\n                                </ns:Ship_Date>\n                            </xsl:if>\n                            <xsl:if test=\"$order/ORD_TYPE\">\n                                <ns:Ord_Type>\n                                    <xsl:value-of select=\"$order/ORD_TYPE\"/>\n                                </ns:Ord_Type>\n                            </xsl:if>\n                            <xsl:if test=\"$order/TRIPID\">\n                                <ns:TripId>\n                                    <xsl:value-of select=\"$order/TRIPID\"/>\n                                </ns:TripId>\n                            </xsl:if>\n                            <xsl:if test=\"$order/TRIP_STATUS\">\n                                <ns:TripStatus>\n                                    <xsl:value-of select=\"$order/TRIP_STATUS\"/>\n                                </ns:TripStatus>\n                            </xsl:if>\n                            <xsl:if test=\"$order/CASES\">\n                                <ns:Cases>\n                                    <xsl:value-of select=\"$order/CASES\"/>\n                                </ns:Cases>\n                            </xsl:if>\n                            <xsl:if test=\"$order/ORD_STATUS\">\n                                <ns:OrderStatus>\n                                    <xsl:value-of select=\"$order/ORD_STATUS\"/>\n                                </ns:OrderStatus>\n                            </xsl:if>\n                            <xsl:if test=\"$order/LAST_KNOWN_SYS\">\n                                <ns:CurrentSystem>\n                                    <xsl:value-of select=\"$order/LAST_KNOWN_SYS\"/>\n                                </ns:CurrentSystem>\n                            </xsl:if>\n                            <ns:InDateTime>\n                                <xsl:value-of select=\"if(string-length($sysState/IN_DATETIME)!=0)&#xA;then &#xA;$sysState/IN_DATETIME&#xA;else&#xA;tib:format-dateTime(&quot;MM-dd-yyyy HH:mm:ss.SSS&quot;, tib:create-dateTime(1970,1, 1,0, 0,0))\"/>\n                            </ns:InDateTime>\n                            <ns:OutDateTime>\n                                <xsl:value-of select=\"if(string-length($sysState/OUT_DATETIME)!=0)&#xA;then &#xA;$sysState/OUT_DATETIME&#xA;else&#xA;tib:format-dateTime(&quot;MM-dd-yyyy HH:mm:ss.SSS&quot;, tib:create-dateTime(1970,1, 1,0, 0,0))\"/>\n                            </ns:OutDateTime>\n                        </ns:OrderSearchResponse>\n                    </ns:OrderResponse>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
			}
			else
			{
				System.debugOut("Order Not Found");
				sapOrderReply=Event.createEvent("xslt://{{/Events/Query/SapOrderResponse}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:tib=\"http://www.tibco.com/bw/xslt/custom-functions\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd tib\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"sapOrderRequest\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:OrderResponse>\n                        <ns:OrderSearchResponse>\n                            <xsl:if test=\"$sapOrderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:SAP_Order_id\">\n                                <ns:Sap_Ord_Num>\n                                    <xsl:value-of select=\"$sapOrderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:SAP_Order_id\"/>\n                                </ns:Sap_Ord_Num>\n                            </xsl:if>\n                            <ns:InDateTime>\n                                <xsl:value-of select=\"tib:create-dateTime(1970,1, 1,0, 0,0)\"/>\n                            </ns:InDateTime>\n                            <ns:OutDateTime>\n                                <xsl:value-of select=\"tib:create-dateTime(1970,1, 1,0, 0,0)\"/>\n                            </ns:OutDateTime>\n                        </ns:OrderSearchResponse>\n                    </ns:OrderResponse>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>");
			}
			
			Event.replyEvent(sapOrderRequest,sapOrderReply);
			
			Query.ResultSet.close(resultSetName);
			Query.Statement.close(statementName);
			System.debugOut("Completed query: " + statementName);
		}
		catch(Exception e)
		{
			System.debugOut("Exception caught in processing SapOrderRequestPP = "+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:param name=\"sapOrderRequest\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Query\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"&quot;SAP ORDER SEARCH&quot;\"/>\n                            </ns:TransactionType>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($sapOrderRequest)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
			
		finally
		{
			//End Logging.
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd3\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"sapOrderRequest\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/Query\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"&quot;SAP ORDER SEARCH&quot;\"/>\n                            </ns1:TransactionType>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Ended processing SAPOrderRequest SAP_ORD_NUM = &quot;,$sapOrderRequest/payload/ns:OrderRequest/ns:OrderSearchRequest/ns:SAP_Order_id)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($sapOrderRequest)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting sapOrderRequest event.
			Event.consumeEvent(sapOrderRequest);
		}
	}
}