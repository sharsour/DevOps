<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/file" xmlns:pfx="http://adidasGroup/schema/cdm/product/reference/v1" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns2="http://www.tibco.com/namespaces/tnt/plugins/file/v2" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:ns4="http://www.tibco.com/pe/EngineTypes" xmlns:ns3="http://www.adidas.de/EAI/Audit.xsd" xmlns:ns0="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://schemas.columbus2050.de/ColumbusCatalog/1.1" xmlns:pfx2="http://www.tibco.com/schemas/CompositeProductServiceAdapter/SharedResources/Schemas/CDM/Schema.xsd">
    <xsd:import namespace="http://www.tibco.com/schemas/CompositeProductServiceAdapter/SharedResources/Schemas/CDM/Schema.xsd" schemaLocation="/SharedResources/Schemas/CDM/CPSM_Schema.xsd"/>
    <xsd:import namespace="http://schemas.columbus2050.de/ColumbusCatalog/1.1" schemaLocation="/Adapter/GetProduct/Shared Resources/Schemas/HBS/ColumbusCatalog.xsd"/>
    <xsd:import namespace="http://adidasGroup/schema/cdm/product/reference/v1"/>
    <pd:name>Adapter/GetProduct/BusinessProcesses/sendRefDataToHBS/getHBSRefDataFullLoad.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startX>27</pd:startX>
    <pd:startY>117</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="exists($getErrorCode/error/errorCode)">
                    <Status>
                        <xsl:value-of select="&quot;Error&quot;"/>
                    </Status>
                </xsl:when>
                <xsl:otherwise>
                    <Status>
                        <xsl:value-of select="&quot;Success&quot;"/>
                    </Status>
                </xsl:otherwise>
            </xsl:choose>
            <errorCode>
                <xsl:value-of select="$getErrorCode/error/errorCode"/>
            </errorCode>
            <StackTrace>
                <xsl:value-of select="concat($getErrorCode/error/sourceApp,$getErrorCode/error/errorInformation)"/>
            </StackTrace>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Status" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StackTrace" type="xsd:string" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>782</pd:endX>
    <pd:endY>117</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1342777156528</pd:targetNamespace>
    <pd:activity name="getErrorCode">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>411</pd:x>
        <pd:y>302</pd:y>
        <config>
            <element>
                <xsd:element name="error">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="errorInformation" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="sourceApp" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <error>
                <xsl:if test="$_error/ns4:ErrorReport/MsgCode">
                    <errorCode>
                        <xsl:value-of select="$_error/ns4:ErrorReport/MsgCode"/>
                    </errorCode>
                </xsl:if>
                <errorInformation>
                    <xsl:value-of select="$_error/ns4:ErrorReport/StackTrace"/>
                </errorInformation>
                <sourceApp>
                    <xsl:value-of select="&quot;getHBSRefDataFullLoad&quot;"/>
                </sourceApp>
            </error>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>581</pd:x>
        <pd:y>300</pd:y>
        <config>
            <variableConfig>/Base/Shared Resources/Data Model/Shared Variables/AuditDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>782</pd:x>
        <pd:y>296</pd:y>
        <config>
            <processName>/Base/ExceptionHandling/SetError.process</processName>
        </config>
        <pd:inputBindings>
            <errorInfos>
                <xsl:if test="$getErrorCode/error/errorCode">
                    <errorCode>
                        <xsl:value-of select="$getErrorCode/error/errorCode"/>
                    </errorCode>
                </xsl:if>
                <xsl:if test="$getErrorCode/error/errorInformation">
                    <errorInformation>
                        <xsl:value-of select="$getErrorCode/error/errorInformation"/>
                    </errorInformation>
                </xsl:if>
                <xsl:if test="$getErrorCode/error/sourceApp">
                    <errorApplication>
                        <xsl:value-of select="$getErrorCode/error/sourceApp"/>
                    </errorApplication>
                </xsl:if>
                <processStack>
                    <xsl:value-of select="&quot;getHBSRefDataFullLoad&quot;"/>
                </processStack>
                <MonitoringDetails>
                    <bpName>
                        <xsl:value-of select="$GetVariable/root/ns3:AuditDetails/ns3:bpName"/>
                    </bpName>
                    <boId>
                        <xsl:value-of select="$GetVariable/root/ns3:AuditDetails/ns3:boId"/>
                    </boId>
                    <customKey>
                        <xsl:value-of select="$GetVariable/root/ns3:AuditDetails/ns3:customKey"/>
                    </customKey>
                    <sourceApp>
                        <xsl:value-of select="$GetVariable/root/ns3:AuditDetails/ns3:sourceApp"/>
                    </sourceApp>
                    <targetApp>
                        <xsl:value-of select="$GetVariable/root/ns3:AuditDetails/ns3:targetApp"/>
                    </targetApp>
                </MonitoringDetails>
            </errorInfos>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>100</pd:x>
        <pd:y>6</pd:y>
        <pd:width>617</pd:width>
        <pd:height>212</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>ReadHBSRefDataNodeListFile</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Write File</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ParseData</pd:from>
            <pd:to>ReadRefDataFile</pd:to>
            <pd:lineType>One Bend</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ReadHBSRefDataNodeListFile</pd:from>
            <pd:to>ParseData</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>MapToCDM</pd:from>
            <pd:to>Render XML</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Render XML</pd:from>
            <pd:to>Write File</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ReadRefDataFile</pd:from>
            <pd:to>ParseData-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>ParseData-1</pd:from>
            <pd:to>MapToCDM</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="MapToCDM">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>401</pd:x>
            <pd:y>62</pd:y>
            <config>
                <element ref="pfx:ReferenceData"/>
            </config>
            <pd:inputBindings>
                <pfx:ReferenceData>
                    <xsl:for-each-group select="$ParseData-1/Output/Rows/HBSrefdata" group-by="concat(HBSTypeName,&quot;$&quot;,HBSValue)">
                        <pfx:rfdHBS>
                            <xsl:attribute name="hbsTypeName">
                                <xsl:value-of select="tib:trim(HBSTypeName)"/>
                            </xsl:attribute>
                            <xsl:attribute name="hbsValue">
                                <xsl:value-of select="tib:trim(HBSValue)"/>
                            </xsl:attribute>
                        </pfx:rfdHBS>
                    </xsl:for-each-group>
                    <xsl:for-each select="$ParseData-1/Output/Rows/HBSrefdata">
                        <pfx:rfdHBSDescription>
                            <xsl:attribute name="hbsTypeName">
                                <xsl:value-of select="tib:trim(HBSTypeName)"/>
                            </xsl:attribute>
                            <xsl:attribute name="hbsValue">
                                <xsl:value-of select="tib:trim(HBSValue)"/>
                            </xsl:attribute>
                            <xsl:attribute name="languageCode">
                                <xsl:value-of select="tib:trim(LanguageCode)"/>
                            </xsl:attribute>
                            <xsl:attribute name="hbsDescriptionShort">
                                <xsl:value-of select="tib:trim(HBSDescriptionShort)"/>
                            </xsl:attribute>
                            <xsl:attribute name="hbsDescriptionLong">
                                <xsl:value-of select="tib:trim(HBSDescriptionLong)"/>
                            </xsl:attribute>
                        </pfx:rfdHBSDescription>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseData/Output/Rows/HBSnodelistdescription">
                        <pfx:rfdNodeList>
                            <xsl:attribute name="nodeId">
                                <xsl:value-of select="NodeId1"/>
                            </xsl:attribute>
                            <xsl:if test="NodeId_Parent">
                                <xsl:attribute name="nodeId_Parent">
                                    <xsl:value-of select="NodeId_Parent"/>
                                </xsl:attribute>
                            </xsl:if>
                        </pfx:rfdNodeList>
                    </xsl:for-each>
                    <xsl:for-each select="$ParseData/Output/Rows/HBSnodelistdescription">
                        <pfx:rfdNodeDescription>
                            <xsl:attribute name="nodeId">
                                <xsl:value-of select="tib:trim(NodeId1)"/>
                            </xsl:attribute>
                            <xsl:attribute name="languageCode">
                                <xsl:value-of select="tib:trim(LanguageCode)"/>
                            </xsl:attribute>
                            <xsl:attribute name="nodeDescription">
                                <xsl:value-of select="tib:trim(Description)"/>
                            </xsl:attribute>
                        </pfx:rfdNodeDescription>
                    </xsl:for-each>
                </pfx:ReferenceData>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ParseData">
            <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
            <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
            <pd:x>290</pd:x>
            <pd:y>62</pd:y>
            <config>
                <InputType>String</InputType>
                <Encoding>ASCII</Encoding>
                <ParseSharedConfig>/Adapter/GetProduct/Shared Resources/Schemas/HBS/HBSnodelistdescription.sharedparse</ParseSharedConfig>
            </config>
            <pd:inputBindings>
                <Input>
                    <text>
                        <xsl:value-of select="$ReadHBSRefDataNodeListFile/ns:ReadActivityOutputTextClass/fileContent/textContent"/>
                    </text>
                    <noOfRecords>
                        <xsl:value-of select="-1"/>
                    </noOfRecords>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ReadHBSRefDataNodeListFile">
            <pd:type>com.tibco.plugin.file.FileReadActivity</pd:type>
            <pd:resourceType>ae.activities.FileReadActivity</pd:resourceType>
            <pd:x>170</pd:x>
            <pd:y>61</pd:y>
            <config>
                <encoding>text</encoding>
            </config>
            <pd:inputBindings>
                <ns2:ReadActivityInputClass>
                    <fileName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CPSInbound/SharedProcesses/LookupFiles/HBSnodelistdescription"/>
                    </fileName>
                </ns2:ReadActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Render XML">
            <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
            <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
            <pd:x>518</pd:x>
            <pd:y>63</pd:y>
            <config>
                <renderAsText>text</renderAsText>
                <validateInput>false</validateInput>
                <textEncoding>UTF-8</textEncoding>
                <renderDefaultPrefix>true</renderDefaultPrefix>
                <term ref="pfx3:catalog"/>
            </config>
            <pd:inputBindings>
                <pfx3:catalog>
                    <xsl:attribute name="version">
                        <xsl:value-of select="&quot;1.1&quot;"/>
                    </xsl:attribute>
                    <pfx3:init>
                        <xsl:attribute name="clientId">
                            <xsl:value-of select="&quot;HBS&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="controlId">
                            <xsl:value-of select="&quot;1&quot;"/>
                        </xsl:attribute>
                        <xsl:attribute name="timestamp">
                            <xsl:value-of select="current-dateTime()"/>
                        </xsl:attribute>
                    </pfx3:init>
                    <pfx3:categories>
                        <xsl:for-each-group select="$MapToCDM/pfx:ReferenceData/pfx:rfdNodeDescription" group-by="@nodeId">
                            <xsl:variable name="var_NodeId" select="@nodeId"/>
                            <pfx3:category>
                                <xsl:attribute name="id">
                                    <xsl:value-of select="tib:trim(@nodeId)"/>
                                </xsl:attribute>
                                <pfx3:displayName>
                                    <pfx3:value>
                                        <xsl:value-of select="tib:trim(@nodeDescription)"/>
                                    </pfx3:value>
                                    <xsl:for-each select=".">
                                        <pfx3:value>
                                            <xsl:attribute name="locale">
                                                <xsl:value-of select="lower-case(tib:trim(@languageCode))"/>
                                            </xsl:attribute>
                                            <xsl:value-of select="tib:trim(@nodeDescription)"/>
                                        </pfx3:value>
                                    </xsl:for-each>
                                </pfx3:displayName>
                                <pfx3:parent>
                                    <xsl:value-of select="tib:trim(../pfx:rfdNodeList[@nodeId=$var_NodeId]/@nodeId_Parent)"/>
                                </pfx3:parent>
                                <pfx3:title>
                                    <xsl:for-each select=".">
                                        <pfx3:value>
                                            <xsl:attribute name="locale">
                                                <xsl:value-of select="lower-case(tib:trim(@languageCode))"/>
                                            </xsl:attribute>
                                            <xsl:value-of select="tib:trim(@nodeDescription)"/>
                                        </pfx3:value>
                                    </xsl:for-each>
                                </pfx3:title>
                            </pfx3:category>
                        </xsl:for-each-group>
                    </pfx3:categories>
                    <pfx3:productAttributes>
                        <xsl:for-each-group select="$MapToCDM/pfx:ReferenceData/pfx:rfdHBS" group-by="@hbsTypeName">
                            <xsl:variable name="var_HBSTypeName" select="tib:trim(@hbsTypeName)"/>
                            <pfx3:productAttribute>
                                <xsl:attribute name="id">
                                    <xsl:value-of select="tib:trim(@hbsTypeName)"/>
                                </xsl:attribute>
                                <pfx3:productAttributeValues>
                                    <xsl:for-each select="$MapToCDM/pfx:ReferenceData/pfx:rfdHBS[tib:trim(@hbsTypeName)=tib:trim($var_HBSTypeName)]">
                                        <pfx3:productAttributeValue>
                                            <xsl:variable name="var_hbsvalue" select="tib:trim(@hbsValue)"/>
                                            <xsl:attribute name="id">
                                                <xsl:value-of select="tib:trim(@hbsValue)"/>
                                            </xsl:attribute>
                                            <pfx3:displayName>
                                                <pfx3:value>
                                                    <xsl:value-of select="tib:trim(../pfx:rfdHBSDescription[((tib:trim(@hbsTypeName)=tib:trim($var_HBSTypeName)) and (tib:trim(@hbsValue)=tib:trim($var_hbsvalue)) and tib:trim(@languageCode = &quot;en&quot;))]/@hbsDescriptionShort)"/>
                                                </pfx3:value>
                                                <xsl:for-each select="$MapToCDM/pfx:ReferenceData/pfx:rfdHBSDescription[((tib:trim(@hbsTypeName)=tib:trim($var_HBSTypeName)) and (tib:trim(@hbsValue)=tib:trim($var_hbsvalue)))]">
                                                    <xsl:for-each-group select="." group-by="@languageCode">
                                                        <pfx3:value>
                                                            <xsl:attribute name="locale">
                                                                <xsl:value-of select="lower-case(tib:trim(@languageCode))"/>
                                                            </xsl:attribute>
                                                            <xsl:value-of select="tib:trim(@hbsDescriptionShort)"/>
                                                        </pfx3:value>
                                                    </xsl:for-each-group>
                                                </xsl:for-each>
                                            </pfx3:displayName>
                                            <pfx3:customAttributes>
                                                <pfx3:customAttribute>
                                                    <xsl:attribute name="attributeId">
                                                        <xsl:value-of select="&quot;description&quot;"/>
                                                    </xsl:attribute>
                                                    <xsl:for-each select="$MapToCDM/pfx:ReferenceData/pfx:rfdHBSDescription[((tib:trim(@hbsTypeName)=tib:trim($var_HBSTypeName)) and (tib:trim(@hbsValue)=tib:trim($var_hbsvalue)))]">
                                                        <xsl:for-each-group select="." group-by="@languageCode">
                                                            <xsl:if test="string-length(tib:trim(@hbsDescriptionLong))>0">
                                                                <pfx3:value>
                                                                    <xsl:attribute name="locale">
                                                                        <xsl:value-of select="lower-case(tib:trim(@languageCode))"/>
                                                                    </xsl:attribute>
                                                                    <xsl:value-of select="tib:trim(@hbsDescriptionLong)"/>
                                                                </pfx3:value>
                                                            </xsl:if>
                                                        </xsl:for-each-group>
                                                    </xsl:for-each>
                                                </pfx3:customAttribute>
                                            </pfx3:customAttributes>
                                        </pfx3:productAttributeValue>
                                    </xsl:for-each>
                                </pfx3:productAttributeValues>
                            </pfx3:productAttribute>
                        </xsl:for-each-group>
                    </pfx3:productAttributes>
                </pfx3:catalog>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ParseData-1">
            <pd:type>com.tibco.plugin.parse.ParseActivity</pd:type>
            <pd:resourceType>ae.activities.ParseActivity</pd:resourceType>
            <pd:x>405</pd:x>
            <pd:y>151</pd:y>
            <config>
                <InputType>String</InputType>
                <Encoding>ASCII</Encoding>
                <ParseSharedConfig>/Adapter/GetProduct/Shared Resources/Schemas/HBS/HBSrefdata.sharedparse</ParseSharedConfig>
            </config>
            <pd:inputBindings>
                <Input>
                    <text>
                        <xsl:value-of select="$ReadRefDataFile/ns:ReadActivityOutputTextClass/fileContent/textContent"/>
                    </text>
                    <noOfRecords>
                        <xsl:value-of select="-1"/>
                    </noOfRecords>
                </Input>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="ReadRefDataFile">
            <pd:type>com.tibco.plugin.file.FileReadActivity</pd:type>
            <pd:resourceType>ae.activities.FileReadActivity</pd:resourceType>
            <pd:x>291</pd:x>
            <pd:y>148</pd:y>
            <config>
                <encoding>text</encoding>
            </config>
            <pd:inputBindings>
                <ns2:ReadActivityInputClass>
                    <fileName>
                        <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/BusinessProcesses/CPSInbound/SharedProcesses/LookupFiles/HBSrefdata"/>
                    </fileName>
                </ns2:ReadActivityInputClass>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Write File">
            <pd:type>com.tibco.plugin.file.FileWriteActivity</pd:type>
            <pd:resourceType>ae.activities.FileWriteActivity</pd:resourceType>
            <pd:x>641</pd:x>
            <pd:y>68</pd:y>
            <config>
                <encoding>text</encoding>
                <compressFile>None</compressFile>
                <append>false</append>
                <createMissingDirectories>true</createMissingDirectories>
            </config>
            <pd:inputBindings>
                <ns:WriteActivityInputTextClass>
                    <fileName>
                        <xsl:value-of select="concat($_globalVariables/ns1:GlobalVariables/BusinessProcesses/CPSOutbound/GetProductDataFromBE/HBS/LocalFilePath,&quot;HBSRefData_&quot;,&#xA;tib:get-year-from-dateTime(current-dateTime()),&#xA;tib:get-month-from-dateTime(current-dateTime()),&#xA;tib:get-day-from-dateTime(current-dateTime()),&#xA;tib:get-hours-from-dateTime(current-dateTime()),&#xA;tib:get-minutes-from-dateTime(current-dateTime()),&#xA;tib:get-seconds-from-dateTime(current-dateTime()),&quot;.xml&quot;)"/>
                    </fileName>
                    <textContent>
                        <xsl:value-of select="$Render-XML/xmlString"/>
                    </textContent>
                    <encoding>
                        <xsl:value-of select="&quot;UTF-8&quot;"/>
                    </encoding>
                </ns:WriteActivityInputTextClass>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>getErrorCode</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>SetError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Group</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>getErrorCode</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>