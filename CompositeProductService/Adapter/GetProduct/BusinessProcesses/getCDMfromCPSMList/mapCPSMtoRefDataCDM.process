<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns1="http://www.adidas.de/EAI/Audit.xsd" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/pe/EngineTypes" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://www.tibco.com/pe/DeployedVarsType" xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx3="http://adidasGroup/schema/cdm/product/reference/v1" xmlns:pfx2="http://adidasGroup/schema/cdm/product/catalogue/v1" xmlns:pfx="http://adidasGroup.com/schema/local/entity/be/product/v1">
    <xsd:import namespace="http://adidasGroup.com/schema/local/entity/be/product/v1" schemaLocation="/Adapter/GetProduct/Shared Resources/Schemas/CDM/CPSMSchemaV1.xsd"/>
    <xsd:import namespace="http://adidasGroup/schema/cdm/product/reference/v1" schemaLocation="/Adapter/GetProduct/Shared Resources/Schemas/CDM/RefData_MessageSchemav1.xsd"/>
    <xsd:import namespace="http://adidasGroup/schema/cdm/product/catalogue/v1"/>
    <pd:name>Adapter/GetProduct/BusinessProcesses/getCDMfromCPSMList/mapCPSMtoRefDataCDM.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType ref="pfx:CPSMList"/>
    <pd:startX>49</pd:startX>
    <pd:startY>81</pd:startY>
    <pd:returnBindings>
        <root>
            <xsl:choose>
                <xsl:when test="string-length($getErrorCode/error/errorCode)>0">
                    <Status>
                        <xsl:value-of select="&quot;Error&quot;"/>
                    </Status>
                </xsl:when>
                <xsl:otherwise>
                    <Status>
                        <xsl:value-of select="&quot;Success&quot;"/>
                    </Status>
                </xsl:otherwise>
            </xsl:choose>
            <xsl:if test="$getErrorCode/error/errorCode">
                <errorCode>
                    <xsl:value-of select="$getErrorCode/error/errorCode"/>
                </errorCode>
            </xsl:if>
            <xsl:if test="$getErrorCode/error/errorInformation">
                <StackTrace>
                    <xsl:value-of select="$getErrorCode/error/errorInformation"/>
                </StackTrace>
            </xsl:if>
            <xsl:copy-of select="$Map-Data/pfx3:ReferenceData"/>
        </root>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType>
        <xsd:element name="root">
            <xsd:complexType>
                <xsd:sequence>
                    <xsd:element name="Status" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
                    <xsd:element name="StackTrace" type="xsd:string" minOccurs="0"/>
                    <xsd:element ref="pfx3:ReferenceData" minOccurs="0"/>
                </xsd:sequence>
            </xsd:complexType>
        </xsd:element>
    </pd:endType>
    <pd:endX>636</pd:endX>
    <pd:endY>81</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1388466142177</pd:targetNamespace>
    <pd:activity name="AuditLog">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>170</pd:x>
        <pd:y>84</pd:y>
        <config>
            <processName>/Base/Logging/Audit/Audit.process</processName>
            <spawn>false</spawn>
        </config>
        <pd:inputBindings>
            <root>
                <customKey>
                    <xsl:value-of select="$_processContext/ns:ProcessContext/ProcessId"/>
                </customKey>
                <station>
                    <xsl:value-of select="concat(&quot;&#xD;&#xA;&quot;, &quot;-----&quot;,&quot;In Process(PID:&quot;,$_processContext/ns:ProcessContext/ProcessId,&quot;)  - mapCPSMtoRefDataCDM: Before mapper Activity &quot; )"/>
                </station>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="AuditLogError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>648</pd:x>
        <pd:y>222</pd:y>
        <config>
            <processName>/Base/Logging/Audit/Audit.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <customKey>
                    <xsl:value-of select="$_processContext/ns:ProcessContext/ProcessId"/>
                </customKey>
                <station>
                    <xsl:value-of select="concat(&quot;&#xD;&#xA;&quot;, &quot;-----&quot;,&quot;In Process(PID:&quot;,$_processContext/ns:ProcessContext/ProcessId,&quot;)  - mapCPSMtoRefDataCDM: Error for ID: &quot;,$RefDataCPSM/pfx:cpsm/pfx:header/@globalArtNr)"/>
                </station>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="getErrorCode">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>439</pd:x>
        <pd:y>148</pd:y>
        <config>
            <element>
                <xsd:element name="error">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="errorCode" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="errorInformation" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="sourceApp" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <error>
                <xsl:if test="$_error/ns:ErrorReport/MsgCode">
                    <errorCode>
                        <xsl:value-of select="$_error/ns:ErrorReport/MsgCode"/>
                    </errorCode>
                </xsl:if>
                <errorInformation>
                    <xsl:value-of select="$_error/ns:ErrorReport/StackTrace"/>
                </errorInformation>
                <sourceApp>
                    <xsl:value-of select="&quot;mapCPSMtoRefDataCDM&quot;"/>
                </sourceApp>
            </error>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetVariable">
        <pd:type>com.tibco.pe.core.GetSharedVariableActivity</pd:type>
        <pd:resourceType>ae.activities.getSharedVariable</pd:resourceType>
        <pd:x>452</pd:x>
        <pd:y>227</pd:y>
        <config>
            <variableConfig>/Base/Shared Resources/Data Model/Shared Variables/AuditDetails.jobsharedvariable</variableConfig>
        </config>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="SetError">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>550</pd:x>
        <pd:y>227</pd:y>
        <config>
            <processName>/Base/ExceptionHandling/SetError.process</processName>
        </config>
        <pd:inputBindings>
            <errorInfos>
                <xsl:if test="$getErrorCode/error/errorCode">
                    <errorCode>
                        <xsl:value-of select="$getErrorCode/error/errorCode"/>
                    </errorCode>
                </xsl:if>
                <xsl:if test="$getErrorCode/error/errorInformation">
                    <errorInformation>
                        <xsl:value-of select="$getErrorCode/error/errorInformation"/>
                    </errorInformation>
                </xsl:if>
                <xsl:if test="$getErrorCode/error/sourceApp">
                    <errorApplication>
                        <xsl:value-of select="$getErrorCode/error/sourceApp"/>
                    </errorApplication>
                </xsl:if>
                <processStack>
                    <xsl:value-of select="&quot;mapCPSMtoCtlCDM&quot;"/>
                </processStack>
                <MonitoringDetails>
                    <bpName>
                        <xsl:value-of select="$GetVariable/root/ns1:AuditDetails/ns1:bpName"/>
                    </bpName>
                    <boId>
                        <xsl:value-of select="$GetVariable/root/ns1:AuditDetails/ns1:boId"/>
                    </boId>
                    <customKey>
                        <xsl:value-of select="$GetVariable/root/ns1:AuditDetails/ns1:customKey"/>
                    </customKey>
                    <sourceApp>
                        <xsl:value-of select="$GetVariable/root/ns1:AuditDetails/ns1:sourceApp"/>
                    </sourceApp>
                    <targetApp>
                        <xsl:value-of select="$GetVariable/root/ns1:AuditDetails/ns1:targetApp"/>
                    </targetApp>
                </MonitoringDetails>
            </errorInfos>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>230</pd:x>
        <pd:y>2</pd:y>
        <pd:width>126</pd:width>
        <pd:height>140</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>inputLoop</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:over>$Start/pfx:CPSMList/pfx:cpsm[pfx:header/@sourceObjType=$_globalVariables/pfx4:GlobalVariables/BusinessProcesses/CPSOutbound/GetProductDataFromBE/GEPS/RefDataObj]</pd:over>
            <pd:iterationElementSlot>RefDataCPSM</pd:iterationElementSlot>
            <pd:indexSlot>i</pd:indexSlot>
            <pd:activityOutputName/>
            <pd:accumulateOutput>false</pd:accumulateOutput>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>289</pd:x>
            <pd:y>78</pd:y>
            <config>
                <element ref="pfx3:ReferenceData"/>
            </config>
            <pd:inputBindings>
                <xsl:variable name="var_NodeID" select="if(contains($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdNodeList.nodeId.&quot;))&#xA;then&#xA;substring-before(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdNodeList.nodeId.&quot;),'&quot;') else&#xA;&quot;qwerty43&quot;"/>
                <pfx3:ReferenceData>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdTechnicalSize.srcSizeScale.&quot;) and&#xA;substring-after(substring-after(current()/@name,&quot;rfdTechnicalSize.srcSizeScale.&quot;),&quot;srcSizeCd3.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdTechnicalSize>
                                <xsl:variable name="Var_SzScale" select="substring-after(substring-before(current()/@name,&quot;.srcSizeCd3.&quot;),&quot;rfdTechnicalSize.srcSizeScale.&quot;)"/>
                                <xsl:attribute name="srcSizeScale">
                                    <xsl:value-of select="$Var_SzScale"/>
                                </xsl:attribute>
                                <xsl:attribute name="srcSizeCd3">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdTechnicalSize.srcSizeScale.&quot;,$Var_SzScale,&quot;.srcSizeCd3.&quot;,current()/@value,&quot;.srcSizeCd2&quot;)]/@value!=''">
                                    <xsl:attribute name="srcSizeCd2">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdTechnicalSize.srcSizeScale.&quot;,$Var_SzScale,&quot;.srcSizeCd3.&quot;,current()/@value,&quot;.srcSizeCd2&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdTechnicalSize.srcSizeScale.&quot;,$Var_SzScale,&quot;.srcSizeCd3.&quot;,current()/@value,&quot;.srcSizeCd&quot;)]/@value!=''">
                                    <xsl:attribute name="srcSizeCd">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdTechnicalSize.srcSizeScale.&quot;,$Var_SzScale,&quot;.srcSizeCd3.&quot;,current()/@value,&quot;.srcSizeCd&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdTechnicalSize>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdChannels.distChan.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdChannels.distChan.&quot;)=current()/@value&#xA;and&#xA;current()/@value!=''">
                            <pfx3:rfdChannels>
                                <xsl:attribute name="distChan">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdChannels.distChan.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdChannels.distChan.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdChannels>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdFandBs.fandBCode.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdFandBs.fandBCode.&quot;)=current()/@value&#xA;and &#xA;current()/@value!=''">
                            <pfx3:rfdFandBs>
                                <xsl:attribute name="fandBCode">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdFandBs.fandBCode.&quot;,current()/@value,&quot;.businessUnit&quot;)]/@value!=''">
                                    <xsl:attribute name="businessUnit">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdFandBs.fandBCode.&quot;,current()/@value,&quot;.businessUnit&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdFandBs>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:if test="contains($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdRegion.regionCode.&quot;)">
                        <pfx3:rfdRegion>
                            <xsl:variable name="var_rgncode" select="substring-before(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdRegion.regionCode.&quot;),'&quot;')"/>
                            <xsl:attribute name="regionCode">
                                <xsl:value-of select="substring-before(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdRegion.regionCode.&quot;),'&quot;')"/>
                            </xsl:attribute>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdRegion.regionCode.&quot;,substring-before(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdRegion.regionCode.&quot;),'&quot;'),&quot;.regionCodeDesc&quot;)]/@value!=''">
                                <xsl:attribute name="regionCodeDesc">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdRegion.regionCode.&quot;,substring-before(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdRegion.regionCode.&quot;),'&quot;'),&quot;.regionCodeDesc&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                                <xsl:if test="contains(current()/@name,&quot;ReferenceData.rfdRegion.regionCode.&quot;) and&#xA;substring-after(substring-after(current()/@name,&quot;ReferenceData.rfdRegion.regionCode.&quot;),&quot;rfdArea.areaCode.&quot;)=current()/@value&#xA;and current()/@value!=''">
                                    <pfx3:rfdArea>
                                        <xsl:variable name="var_AreaCode" select="current()/@value"/>
                                        <xsl:attribute name="areaCode">
                                            <xsl:value-of select="current()/@value"/>
                                        </xsl:attribute>
                                        <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;ReferenceData.rfdRegion.regionCode.&quot;,$var_rgncode,&quot;.rfdArea.areaCode.&quot;,current()/@value,&quot;.areaCodeDesc&quot;)]/@value!=''">
                                            <xsl:attribute name="areaCodeDesc">
                                                <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;ReferenceData.rfdRegion.regionCode.&quot;,$var_rgncode,&quot;.rfdArea.areaCode.&quot;,current()/@value,&quot;.areaCodeDesc&quot;)]/@value"/>
                                            </xsl:attribute>
                                        </xsl:if>
                                        <xsl:for-each select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                                            <xsl:if test="contains(current()/@name,&quot;ReferenceData.rfdRegion.regionCode.&quot;) and&#xA;substring-after(substring-after(substring-after(current()/@name,&quot;ReferenceData.rfdRegion.regionCode.&quot;),&quot;rfdArea.areaCode.&quot;),&quot;rfdCountryCode.countryCode.&quot;)=current()/@value&#xA;and current()/@value!=''">
                                                <pfx3:rfdCountryCode>
                                                    <xsl:attribute name="countryCode">
                                                        <xsl:value-of select="current()/@value"/>
                                                    </xsl:attribute>
                                                    <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;ReferenceData.rfdRegion.regionCode.&quot;,$var_rgncode,&quot;.rfdArea.areaCode.&quot;,$var_AreaCode,&quot;.rfdCountryCode.countryCode.&quot;,current()/@value,&quot;.countryCodeDesc&quot;)]/@value!=''">
                                                        <xsl:attribute name="countryCodeDesc">
                                                            <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;ReferenceData.rfdRegion.regionCode.&quot;,$var_rgncode,&quot;.rfdArea.areaCode.&quot;,$var_AreaCode,&quot;.rfdCountryCode.countryCode.&quot;,current()/@value,&quot;.countryCodeDesc&quot;)]/@value"/>
                                                        </xsl:attribute>
                                                    </xsl:if>
                                                </pfx3:rfdCountryCode>
                                            </xsl:if>
                                        </xsl:for-each>
                                    </pfx3:rfdArea>
                                </xsl:if>
                            </xsl:for-each>
                        </pfx3:rfdRegion>
                    </xsl:if>
                    <xsl:if xmlns:xsl="http://www.w3.org/1999/XSL/Transform" test="contains($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdMktStrucSalesArea.marketArea.&quot;)">
                        <pfx3:rfdMktStrucSalesArea>
                            <xsl:variable name="var_mktArea" select="substring-before(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdMktStrucSalesArea.marketArea.&quot;),'&quot;')"/>
                            <xsl:variable name="var_mktChan" select="substring-before(substring-after(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdMktStrucSalesArea.marketArea.&quot;),&quot;marketChan.&quot;),'&quot;')"/>
                            <xsl:variable name="var_mktSeq" select="substring-before(substring-after(substring-after($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdMktStrucSalesArea.marketArea.&quot;),&quot;sequNo.&quot;),'&quot;')"/>
                            <xsl:attribute name="marketArea">
                                <xsl:value-of select="$var_mktArea"/>
                            </xsl:attribute>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.distChan&quot;)]/@value!=''">
                                <xsl:attribute name="salesOrg">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.salesOrg&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.distChan&quot;)]/@value!=''">
                                <xsl:attribute name="distChan">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.distChan&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.regionCd&quot;)]/@value!=''">
                                <xsl:attribute name="regionCd">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.regionCd&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.areaCd&quot;)]/@value!=''">
                                <xsl:attribute name="areaCd">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.areaCd&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.countryCd&quot;)]/@value!=''">
                                <xsl:attribute name="countryCd">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.countryCd&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:attribute name="marketChan">
                                <xsl:value-of select="$var_mktChan"/>
                            </xsl:attribute>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.customerNoDef&quot;)]/@value!=''">
                                <xsl:attribute name="customerNoDef">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.customerNoDef&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.sizeConvId&quot;)]/@value!=''">
                                <xsl:attribute name="sizeConvId">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.sizeConvId&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.localeId&quot;)]/@value!=''">
                                <xsl:attribute name="localeId">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.localeId&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.languageCd&quot;)]/@value!=''">
                                <xsl:attribute name="languageCd">
                                    <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktStrucSalesArea.marketArea.&quot;,$var_mktArea,&quot;.marketChan.&quot;,$var_mktChan,&quot;.sequNo.&quot;,$var_mktSeq,&quot;.languageCd&quot;)]/@value"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:attribute name="sequNo">
                                <xsl:value-of select="$var_mktSeq"/>
                            </xsl:attribute>
                        </pfx3:rfdMktStrucSalesArea>
                    </xsl:if>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdCondition.conditionType.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdCondition.conditionType.&quot;)=current()/@value&#xA;and&#xA;current()/@value!=''">
                            <pfx3:rfdCondition>
                                <xsl:attribute name="conditionType">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdCondition.conditionType.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdCondition.conditionType.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdCondition>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdLocale.localeId.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdLocale.localeId.&quot;)=current()/@value&#xA;and&#xA;current()/@value!=''">
                            <pfx3:rfdLocale>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLocale.localeId.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLocale.localeId.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:attribute name="localeId">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                            </pfx3:rfdLocale>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdSizeConv.sizeConvId.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdSizeConv.sizeConvId.&quot;)=current()/@value&#xA;and&#xA;current()/@value!=''">
                            <pfx3:rfdSizeConv>
                                <xsl:attribute name="sizeConvId">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdSizeConv.sizeConvId.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdSizeConv.sizeConvId.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdSizeConv>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdSalesArea.salesOrg.&quot;) and&#xA;substring-after(substring-after(current()/@name,&quot;rfdSalesArea.salesOrg.&quot;),&quot;.distChan.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdSalesArea>
                                <xsl:attribute name="salesOrg">
                                    <xsl:value-of select="substring-before(substring-after(current()/@name,&quot;rfdSalesArea.salesOrg.&quot;),&quot;.distChan.&quot;)"/>
                                </xsl:attribute>
                                <xsl:attribute name="distChan">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                            </pfx3:rfdSalesArea>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdLogo.logoName.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdLogo.logoName.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdLogo>
                                <xsl:attribute name="logoName">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLogo.logoName.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="url">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLogo.logoName.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLogo.logoName.&quot;,current()/@value,&quot;.url&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLogo.logoName.&quot;,current()/@value,&quot;.url&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdLogo>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdLanguage.languageCd.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdLanguage.languageCd.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdLanguage>
                                <xsl:attribute name="languageCd">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.sapCd&quot;)]/@value!=''">
                                    <xsl:attribute name="sapCd">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.sapCd&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.spmCd&quot;)]/@value!=''">
                                    <xsl:attribute name="spmCd">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.spmCd&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.iso3Cd&quot;)]/@value!=''">
                                    <xsl:attribute name="iso3Cd">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.iso3Cd&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.iso2Code&quot;)]/@value!=''">
                                    <xsl:attribute name="iso2Code">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdLanguage.languageCd.&quot;,current()/@value,&quot;.iso2Code&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdLanguage>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdConversion.conversionType.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdConversion.conversionType.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdConversion>
                                <xsl:attribute name="conversionType">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdConversion.conversionType.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdConversion.conversionType.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdConversion>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdSeason.timePeriodCd.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdSeason.timePeriodCd.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdSeason>
                                <xsl:attribute name="timePeriodCd">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdSeason.timePeriodCd.&quot;,current()/@value,&quot;.seasonCd&quot;)]/@value!=''">
                                    <xsl:attribute name="seasonCd">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdSeason.timePeriodCd.&quot;,current()/@value,&quot;.seasonCd&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdSeason.timePeriodCd.&quot;,current()/@value,&quot;.sPMSeasonCd&quot;)]/@value!=''">
                                    <xsl:attribute name="sPMSeasonCd">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdSeason.timePeriodCd.&quot;,current()/@value,&quot;.sPMSeasonCd&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdSeason>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdHBS.hbsTypeName.&quot;) and contains(current()/@name,&quot;.hbsValue.&quot;) and &#xA;substring-after(current()/@name,&quot;hbsValue.&quot;)=current()/@value">
                            <pfx3:rfdHBS>
                                <xsl:attribute name="hbsTypeName">
                                    <xsl:value-of select="substring-after(substring-before(current()/@name,&quot;.hbsValue.&quot;),&quot;hbsTypeName.&quot;)"/>
                                </xsl:attribute>
                                <xsl:attribute name="hbsValue">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                            </pfx3:rfdHBS>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdHBSDescription.hbsTypeName.&quot;) and contains(current()/@name,&quot;.languageCode.&quot;) and &#xA;substring-after(current()/@name,&quot;languageCode.&quot;)=current()/@value">
                            <pfx3:rfdHBSDescription>
                                <xsl:variable name="var_tpNm" select="substring-after(substring-before(current()/@name,&quot;.hbsValue.&quot;),&quot;.hbsTypeName.&quot;)"/>
                                <xsl:variable name="var_hbsvalue" select="substring-after(substring-before(current()/@name,&quot;.languageCode.&quot;),&quot;.hbsValue.&quot;)"/>
                                <xsl:attribute name="hbsTypeName">
                                    <xsl:value-of select="substring-after(substring-before(current()/@name,&quot;.hbsValue.&quot;),&quot;.hbsTypeName.&quot;)"/>
                                </xsl:attribute>
                                <xsl:attribute name="hbsValue">
                                    <xsl:value-of select="substring-after(substring-before(current()/@name,&quot;.languageCode.&quot;),&quot;.hbsValue.&quot;)"/>
                                </xsl:attribute>
                                <xsl:attribute name="languageCode">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdHBSDescription.hbsTypeName.&quot;,$var_tpNm,&quot;.hbsValue.&quot;,$var_hbsvalue,&quot;.languageCode.&quot;,current()/@value,&quot;.hbsDescriptionShort&quot;)]/@value!=''">
                                    <xsl:attribute name="hbsDescriptionShort">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdHBSDescription.hbsTypeName.&quot;,$var_tpNm,&quot;.hbsValue.&quot;,$var_hbsvalue,&quot;.languageCode.&quot;,current()/@value,&quot;.hbsDescriptionShort&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdHBSDescription.hbsTypeName.&quot;,$var_tpNm,&quot;.hbsValue.&quot;,$var_hbsvalue,&quot;.languageCode.&quot;,current()/@value,&quot;.hbsDescriptionLong&quot;)]/@value!=''">
                                    <xsl:attribute name="hbsDescriptionLong">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdHBSDescription.hbsTypeName.&quot;,$var_tpNm,&quot;.hbsValue.&quot;,$var_hbsvalue,&quot;.languageCode.&quot;,current()/@value,&quot;.hbsDescriptionLong&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdHBSDescription>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:if test="contains($RefDataCPSM/pfx:cpsm/pfx:attributeList,&quot;rfdNodeList.nodeId.&quot;)">
                        <pfx3:rfdNodeList>
                            <xsl:attribute name="nodeId">
                                <xsl:value-of select="$var_NodeID"/>
                            </xsl:attribute>
                            <xsl:attribute name="nodeId_Parent">
                                <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdNodeList.nodeId.&quot;,$var_NodeID,&quot;.nodeId_Parent&quot;)]/@value"/>
                            </xsl:attribute>
                        </pfx3:rfdNodeList>
                    </xsl:if>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdNodeDescription.nodeId.&quot;) and&#xA;substring-after(current()/@name,&quot;languageCode.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdNodeDescription>
                                <xsl:variable name="var_nodeid" select="substring-before(substring-after(current()/@name,&quot;rfdNodeDescription.nodeId.&quot;),&quot;.languageCode&quot;)"/>
                                <xsl:attribute name="nodeId">
                                    <xsl:value-of select="$var_nodeid"/>
                                </xsl:attribute>
                                <xsl:attribute name="languageCode">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdNodeDescription.nodeId.&quot;,$var_nodeid,&quot;.languageCode.&quot;,current()/@value,&quot;.nodeDescription&quot;)]/@value!=''">
                                    <xsl:attribute name="nodeDescription">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdNodeDescription.nodeId.&quot;,$var_nodeid,&quot;.languageCode.&quot;,current()/@value,&quot;.nodeDescription&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdNodeDescription>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdMktArea.mktArea.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdMktArea.mktArea.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdMktArea>
                                <xsl:attribute name="mktArea">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktArea.mktArea.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktArea.mktArea.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdMktArea>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each xmlns:xsl="http://www.w3.org/1999/XSL/Transform" select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdMktChan.mktChan.&quot;) and&#xA;substring-after(current()/@name,&quot;rfdMktChan.mktChan.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdMktChan>
                                <xsl:attribute name="mktChan">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktChan.mktChan.&quot;,current()/@value,&quot;.desc&quot;)]/@value!=''">
                                    <xsl:attribute name="desc">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdMktChan.mktChan.&quot;,current()/@value,&quot;.desc&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdMktChan>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdFandBsLang.fandBCode.&quot;) and&#xA;substring-after(current()/@name,&quot;languageCode.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdFandBsLang>
                                <xsl:variable name="var_fnbcd" select="substring-after(substring-before(current()/@name,&quot;.languageCode.&quot;),&quot;fandBCode.&quot;)"/>
                                <xsl:attribute name="fandBCode">
                                    <xsl:value-of select="substring-after(substring-before(current()/@name,&quot;.languageCode.&quot;),&quot;fandBCode.&quot;)"/>
                                </xsl:attribute>
                                <xsl:attribute name="languageCode">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdFandBsLang.fandBCode.&quot;,$var_fnbcd,&quot;.languageCode.&quot;,current()/@value,&quot;.featureName&quot;)]/@value!=''">
                                    <xsl:attribute name="featureName">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdFandBsLang.fandBCode.&quot;,$var_fnbcd,&quot;.languageCode.&quot;,current()/@value,&quot;.featureName&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:if test="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdFandBsLang.fandBCode.&quot;,$var_fnbcd,&quot;.languageCode.&quot;,current()/@value,&quot;.featureBenefit&quot;)]/@value!=''">
                                    <xsl:attribute name="featureBenefit">
                                        <xsl:value-of select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute[@name=concat(&quot;rfdFandBsLang.fandBCode.&quot;,$var_fnbcd,&quot;.languageCode.&quot;,current()/@value,&quot;.featureBenefit&quot;)]/@value"/>
                                    </xsl:attribute>
                                </xsl:if>
                            </pfx3:rfdFandBsLang>
                        </xsl:if>
                    </xsl:for-each>
                    <xsl:for-each select="$RefDataCPSM/pfx:cpsm/pfx:attributeList/pfx:attribute">
                        <xsl:if test="contains(current()/@name,&quot;rfdFandBsToLogo.logoName.&quot;) and&#xA;substring-after(current()/@name,&quot;fandBCode.&quot;)=current()/@value&#xA;and current()/@value!=''">
                            <pfx3:rfdFandBsToLogo>
                                <xsl:attribute name="logoName">
                                    <xsl:value-of select="substring-after(substring-before(current()/@name,&quot;.fandBCode.&quot;),&quot;logoName.&quot;)"/>
                                </xsl:attribute>
                                <xsl:attribute name="fandBCode">
                                    <xsl:value-of select="current()/@value"/>
                                </xsl:attribute>
                            </pfx3:rfdFandBsToLogo>
                        </xsl:if>
                    </xsl:for-each>
                </pfx3:ReferenceData>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>AuditLog</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetVariable</pd:from>
        <pd:to>SetError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>SetError</pd:from>
        <pd:to>AuditLogError</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLogError</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-65536</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>getErrorCode</pd:from>
        <pd:to>GetVariable</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>AuditLog</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription/>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>getErrorCode</pd:to>
        <pd:lineType>Multiple Bends</pd:lineType>
        <pd:lineColor>-3407872</pd:lineColor>
        <pd:conditionType>error</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>