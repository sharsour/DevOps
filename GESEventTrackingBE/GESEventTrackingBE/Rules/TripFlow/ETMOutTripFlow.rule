/**
 * @description This rule creates/Updates the Trip concept with the data of incoming ETM-OUT Trip Event.
 * @author HYDPCM228839D
 */
rule Rules.TripFlow.ETMOutTripFlow {
	attribute {
		priority = 1;
		forwardChain = true;
	}
	declare {
		Events.Input.TripEvent tripEvent;
		Concepts.PLANT_TIMEZONE plantTZ;
	}
	when {
		//Checking the Input System which sent the Trip Event.
		System.getGlobalVariableAsString("OrderSystems/InputSystems/ETMOUT","ETMOUT")==XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$tripEvent/payload/xsd2:Trip/xsd2:System</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>");
	}
	then {
		System.debugOut("In ETMOutTripUpdation rule");
		String e2eSLA=System.getGlobalVariableAsString("SLA/STATUS/INITIAL","EVAL");
						
		//Logging.
		boolean cleFlag=System.getGlobalVariableAsBoolean("CLEparams/CLE_Flag",true);
		String gesAgentId=Engine.engineName();
		if(cleFlag)
		{
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/TripFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/TripFlow\"/>\n                            </ns1:TransactionType>\n                            <xsl:if test=\"$tripEvent/payload/ns2:Trip/ns2:Plant_Num\">\n                                <ns1:BusinessID>\n                                    <xsl:value-of select=\"$tripEvent/payload/ns2:Trip/ns2:Plant_Num\"/>\n                                </ns1:BusinessID>\n                            </xsl:if>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Started processing Trip  =  &quot;,$tripEvent/payload/ns2:Trip/ns2:TripID,&quot; at System = &quot;,$tripEvent/payload/ns2:Trip/ns2:System)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;Start Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($tripEvent)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
		
		try
		{
			//Retrieve Plant Name by using Plant Number from Order Event.
			String plantNum=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$tripEvent/payload/xsd3:Trip/xsd3:Plant_Num</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>");
			String plantName=RuleFunctions.Inference.CommonRF.getPlantName(plantNum/*plantNum String */,plantTZ/*plantTZ Concepts.PLANT_TIMEZONE */);
			String tripID=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$tripEvent/payload/xsd2:Trip/xsd2:TripID</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>");
			String etm=System.getGlobalVariableAsString("OrderSystems/ActualSystems/ETM","ETM");
			String sap=System.getGlobalVariableAsString("OrderSystems/ActualSystems/SAP","SAP");
			String sapSLA=System.getGlobalVariableAsString("SLA/STATUS/INITIAL","EVAL");
			String pwm=System.getGlobalVariableAsString("OrderSystems/ActualSystems/PWM","PWM");
			
			Concepts.TRIP trip=Instance.getByExtIdByUri(tripID,"/Concepts/TRIP");
			System.debugOut("After retrieving Trip concept");
			if(trip!=null)
			{
				Concepts.TRIP_SYSSTATE [] trip_SysState=Instance.PropertyArray.toArrayContainedConcept(trip.SYSSTATE);
				Concepts.TRIP_SYSSTATE etm_SysState=RuleFunctions.Inference.TripFlow.getTripSysState(trip_SysState/*trip_SysState Concepts.TRIP_SYSSTATE[] */,etm/*system String */);
				Concepts.TRIP_SYSSTATE sap_SysState=RuleFunctions.Inference.TripFlow.getTripSysState(trip_SysState/*trip_SysState Concepts.TRIP_SYSSTATE[] */,sap/*system String */);
				Concepts.TRIP_SYSSTATE pwm_SysState=RuleFunctions.Inference.TripFlow.getTripSysState(trip_SysState/*trip_SysState Concepts.TRIP_SYSSTATE[] */,pwm/*system String */);
				long sapInTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $tripEvent/payload/xsd3:Trip/xsd3:JMSDateTime)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>"));
				
				if(etm_SysState!=null)
				{
					System.debugOut("This Trip is already sent by ETM");
					//Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns1=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"&quot;TRIP&quot;\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$tripEvent/payload/ns1:Trip/ns1:Plant_Num\">\n                                <ns:BusinessID>\n                                    <xsl:value-of select=\"$tripEvent/payload/ns1:Trip/ns1:Plant_Num\"/>\n                                </ns:BusinessID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/ErrorCodes/TripAlreadyExists/code\"/>\n                        </ns:Code>\n                        <ns:Message>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/ErrorCodes/TripAlreadyExists/message\"/>\n                        </ns:Message>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($tripEvent)\"/>\n                        </ns:TransactionData>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
				}
				else
				{
					//Check SAP SLA.
					if((sap_SysState!=null) && (sap_SysState.OUT_DATETIME!=null))
					{
						//Calculate delay at SAP system and set the SLA status.
						long sapOutTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $sap_SysState/OUT_DATETIME)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>sap_SysState</variable>\n    </variables>\n</xpath>"));
						long actualDelay=sapOutTime-sapInTime;
						long expectedDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/TRIP_SAP_SLA",20000);
						
						if(actualDelay<=expectedDelay)
						{
							sapSLA=System.getGlobalVariableAsString("SLA/STATUS/SUCCESS","PASS");
						}
						else
						{
							sapSLA=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");					
						}
						System.debugOut("Calculated SAP-SLA = "+sapSLA);
					}
					
					//Check E2ESLA.
					if((pwm_SysState!=null) && (pwm_SysState.IN_DATETIME!=null))
					{
						//Calculate E2Edelay and set the SLA status.
						long pwmInTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $pwm_SysState/IN_DATETIME)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>pwm_SysState</variable>\n    </variables>\n</xpath>"));
						long actualDelay=pwmInTime-sapInTime;
						long expectedLateDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/TRIP_E2ESLA_LATE",25000);
						long expectedFailDelay=System.getGlobalVariableAsLong("SLA/INTERVAL/TRIP_E2ESLA_FAIL",30000);
						
						if(actualDelay<=expectedLateDelay)
						{
							e2eSLA=System.getGlobalVariableAsString("SLA/STATUS/SUCCESS","PASS");
						}
						else if(actualDelay<=expectedFailDelay)
						{
							e2eSLA=System.getGlobalVariableAsString("SLA/STATUS/FIRSTFAIL","LATE");
						}
						else
						{
							e2eSLA=System.getGlobalVariableAsString("SLA/STATUS/SECONDFAIL","FAIL");					
						}
						System.debugOut("Calculated E2ESLA = "+e2eSLA);
					}
					
					
					//Update Trip Concept.
					etm_SysState=Instance.createInstance("xslt://{{/Concepts/TRIP_SYSSTATE}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/ETM,$tripEvent/payload/ns:Trip/ns:TripID)\"/>\n                </xsl:attribute>\n                <SEQUENCE>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/TripSystemSequence/ETM\"/>\n                </SEQUENCE>\n                <SYSTEM>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/ETM\"/>\n                </SYSTEM>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\">\n                    <OUT_DATETIME>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\"/>\n                    </OUT_DATETIME>\n                </xsl:if>\n                <SLA>\n                    <xsl:value-of select=\"$globalVariables/SLA/STATUS/INITIAL\"/>\n                </SLA>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:TripID\">\n                    <TRIP_ID>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:TripID\"/>\n                    </TRIP_ID>\n                </xsl:if>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
					Instance.PropertyArray.appendContainedConcept(trip.SYSSTATE,etm_SysState,System.currentTimeMillis());
					System.debugOut("Appended ETM SysState");
					if(sap_SysState!=null)
					{
							int sapIndex=Instance.PropertyArray.indexOfContainedConcept(trip.SYSSTATE,sap_SysState);
							trip.SYSSTATE[sapIndex].IN_DATETIME=XPath.evalAsString("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>$tripEvent/payload/xsd3:Trip/xsd3:JMSDateTime</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd3\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>");
							trip.SYSSTATE[sapIndex].SLA=sapSLA;
							System.debugOut("Updated SAP SysState");
					}
					else
					{
						sap_SysState=Instance.createInstance("xslt://{{/Concepts/TRIP_SYSSTATE}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:param name=\"sapSLA\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:attribute name=\"extId\">\n                    <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/SAP,$tripEvent/payload/ns:Trip/ns:TripID)\"/>\n                </xsl:attribute>\n                <SEQUENCE>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/TripSystemSequence/SAP\"/>\n                </SEQUENCE>\n                <SYSTEM>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/SAP\"/>\n                </SYSTEM>\n                <IN_DATETIME>\n                    <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\"/>\n                </IN_DATETIME>\n                <SLA>\n                    <xsl:value-of select=\"$sapSLA\"/>\n                </SLA>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:TripID\">\n                    <TRIP_ID>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:TripID\"/>\n                    </TRIP_ID>\n                </xsl:if>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
						Instance.PropertyArray.appendContainedConcept(trip.SYSSTATE,sap_SysState,System.currentTimeMillis());
						System.debugOut("Appended SAP SysState");
					}
					trip.E2ESLA=e2eSLA;		
					Long tripCreationTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $tripEvent/payload/xsd2:Trip/xsd2:JMSDateTime)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>"));
					trip.TRIP_CREATION_TIME=tripCreationTime;		
					
				}
				
			}
			else
			{//Creating Trip instance.
				Long tripCreationTime=DateTime.getTimeInMillis(XPath.evalAsDateTime("xpath://<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xpath>\n    <expr>tib:parse-dateTime(\"MM-dd-yyyy HH:mm:ss.SSS\", $tripEvent/payload/xsd2:Trip/xsd2:JMSDateTime)</expr>\n    <namespaces>\n        <namespace URI=\"http://www.w3.org/1999/XSL/Transform\" pfx=\"xsl\"/>\n        <namespace URI=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" pfx=\"xsd2\"/>\n        <namespace URI=\"http://www.w3.org/2001/XMLSchema\" pfx=\"xsd\"/>\n        <namespace URI=\"http://www.tibco.com/bw/xslt/custom-functions\" pfx=\"tib\"/>\n    </namespaces>\n    <variables>\n        <variable>tripEvent</variable>\n    </variables>\n</xpath>"));
				trip=Instance.createInstance("xslt://{{/Concepts/TRIP}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:param name=\"plantName\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"tripCreationTime\"/>\n    <xsl:template match=\"/\">\n        <createObject>\n            <object>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:TripID\">\n                    <xsl:attribute name=\"extId\">\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:TripID\"/>\n                    </xsl:attribute>\n                </xsl:if>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:Plant_Num\">\n                    <PLANT_NUM>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:Plant_Num\"/>\n                    </PLANT_NUM>\n                </xsl:if>\n                <PLANT_NAME>\n                    <xsl:value-of select=\"$plantName\"/>\n                </PLANT_NAME>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:TripID\">\n                    <TRIPID>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:TripID\"/>\n                    </TRIPID>\n                </xsl:if>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:Ship_Date\">\n                    <SHIP_DATE>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:Ship_Date\"/>\n                    </SHIP_DATE>\n                </xsl:if>\n                <TRIP_STATUS>\n                    <xsl:value-of select=\"false()\"/>\n                </TRIP_STATUS>\n                <E2ESLA>\n                    <xsl:value-of select=\"$globalVariables/SLA/STATUS/INITIAL\"/>\n                </E2ESLA>\n                <LAST_KNOWN_SYSTEM>\n                    <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/ETM\"/>\n                </LAST_KNOWN_SYSTEM>\n                <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\">\n                    <LAST_KNOWN_TIME>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\"/>\n                    </LAST_KNOWN_TIME>\n                </xsl:if>\n                <xsl:for-each select=\"$tripEvent/payload/ns:Trip/ns:SAPOrder/ns:SAPOrderNumber\">\n                    <SHIPID>\n                        <xsl:value-of select=\".\"/>\n                    </SHIPID>\n                </xsl:for-each>\n                <RECONCILIATION_DONE>\n                    <xsl:value-of select=\"false()\"/>\n                </RECONCILIATION_DONE>\n                <SYSSTATE>\n                    <xsl:attribute name=\"extId\">\n                        <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/ETM,$tripEvent/payload/ns:Trip/ns:TripID)\"/>\n                    </xsl:attribute>\n                    <SEQUENCE>\n                        <xsl:value-of select=\"$globalVariables/OrderSystems/TripSystemSequence/ETM\"/>\n                    </SEQUENCE>\n                    <SYSTEM>\n                        <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/ETM\"/>\n                    </SYSTEM>\n                    <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\">\n                        <OUT_DATETIME>\n                            <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\"/>\n                        </OUT_DATETIME>\n                    </xsl:if>\n                    <SLA>\n                        <xsl:value-of select=\"$globalVariables/SLA/STATUS/INITIAL\"/>\n                    </SLA>\n                    <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:TripID\">\n                        <TRIP_ID>\n                            <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:TripID\"/>\n                        </TRIP_ID>\n                    </xsl:if>\n                </SYSSTATE>\n                <SYSSTATE>\n                    <xsl:attribute name=\"extId\">\n                        <xsl:value-of select=\"concat($globalVariables/OrderSystems/ActualSystems/SAP,$tripEvent/payload/ns:Trip/ns:TripID)\"/>\n                    </xsl:attribute>\n                    <SEQUENCE>\n                        <xsl:value-of select=\"$globalVariables/OrderSystems/TripSystemSequence/SAP\"/>\n                    </SEQUENCE>\n                    <SYSTEM>\n                        <xsl:value-of select=\"$globalVariables/OrderSystems/ActualSystems/SAP\"/>\n                    </SYSTEM>\n                    <IN_DATETIME>\n                        <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:JMSDateTime\"/>\n                    </IN_DATETIME>\n                    <SLA>\n                        <xsl:value-of select=\"$globalVariables/SLA/STATUS/INITIAL\"/>\n                    </SLA>\n                    <xsl:if test=\"$tripEvent/payload/ns:Trip/ns:TripID\">\n                        <TRIP_ID>\n                            <xsl:value-of select=\"$tripEvent/payload/ns:Trip/ns:TripID\"/>\n                        </TRIP_ID>\n                    </xsl:if>\n                </SYSSTATE>\n                <TRIP_CREATION_TIME>\n                    <xsl:value-of select=\"$tripCreationTime\"/>\n                </TRIP_CREATION_TIME>\n                <IS_GES>\n                    <xsl:value-of select=\"false()\"/>\n                </IS_GES>\n            </object>\n        </createObject>\n    </xsl:template>\n</xsl:stylesheet>");
				System.debugOut("Trip concept is instantiated with TripId = "+trip.TRIPID);	
			}
		
		
		
		//PlantSummary Concept will be updated with ETMOut Trip details in reconciliation rule. 
		}
		catch(Exception e)
		{
			String message = "Exception caught in processing ETMOutTripUpdation rule  ";
			System.debugOut(message+e);
			Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/ExceptionEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns1=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"message\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:param name=\"e\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns:ExceptionRequest>\n                        <ns:Header>\n                            <ns:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns:ApplicationID>\n                            <ns:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns:ServiceName>\n                            <ns:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/TripFlow\"/>\n                            </ns:ComponentName>\n                            <ns:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns:Hostname>\n                            <ns:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns:Timestamp>\n                            <ns:TransactionType>\n                                <xsl:value-of select=\"$message\"/>\n                            </ns:TransactionType>\n                            <xsl:if test=\"$tripEvent/payload/ns1:Trip/ns1:Plant_Num\">\n                                <ns:BusinessID>\n                                    <xsl:value-of select=\"$tripEvent/payload/ns1:Trip/ns1:Plant_Num\"/>\n                                </ns:BusinessID>\n                            </xsl:if>\n                        </ns:Header>\n                        <ns:Category>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorCategory\"/>\n                        </ns:Category>\n                        <ns:Type>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorType\"/>\n                        </ns:Type>\n                        <ns:Severity>\n                            <xsl:value-of select=\"$globalVariables/CLEparams/DefaultErrorSeverity\"/>\n                        </ns:Severity>\n                        <ns:Code>\n                            <xsl:value-of select=\"$e/@errorType\"/>\n                        </ns:Code>\n                        <xsl:if test=\"$e/@message\">\n                            <ns:Message>\n                                <xsl:value-of select=\"$e/@message\"/>\n                            </ns:Message>\n                        </xsl:if>\n                        <ns:TransactionData>\n                            <xsl:value-of select=\"string($tripEvent)\"/>\n                        </ns:TransactionData>\n                        <ns:DumpAnalysis>\n                            <xsl:value-of select=\"string($e)\"/>\n                        </ns:DumpAnalysis>\n                    </ns:ExceptionRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
		}
			
		finally
		{
			//End Log.
			if(cleFlag)
			{
				Event.sendEvent(Event.createEvent("xslt://{{/Events/Common/LogEvent}}<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<xsl:stylesheet xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\" xmlns:ns=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd5\" xmlns:ns1=\"http://www.PepsiCo.com/unique/default/namespace/CommonLE\" xmlns:ns2=\"http://www.pepsico.com/schemas/practice/Schemas/Schema.xsd4\" version=\"1.0\" exclude-result-prefixes=\"ns2 ns1 xsl ns xsd\">\n    <xsl:output method=\"xml\"/>\n    <xsl:param name=\"globalVariables\"/>\n    <xsl:param name=\"gesAgentId\"/>\n    <xsl:param name=\"tripEvent\"/>\n    <xsl:template match=\"/\">\n        <createEvent>\n            <event>\n                <payload>\n                    <ns1:LogRequest>\n                        <ns1:Header>\n                            <ns1:ApplicationID>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_Applicationid\"/>\n                            </ns1:ApplicationID>\n                            <ns1:ServiceName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ServiceName\"/>\n                            </ns1:ServiceName>\n                            <ns1:ComponentName>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_ComponentNames/TripFlow\"/>\n                            </ns1:ComponentName>\n                            <ns1:Hostname>\n                                <xsl:value-of select=\"$gesAgentId\"/>\n                            </ns1:Hostname>\n                            <ns1:Timestamp>\n                                <xsl:value-of select=\"current-dateTime()\"/>\n                            </ns1:Timestamp>\n                            <ns1:TransactionType>\n                                <xsl:value-of select=\"$globalVariables/CLEparams/CLE_TransactionType/TripFlow\"/>\n                            </ns1:TransactionType>\n                            <xsl:if test=\"$tripEvent/payload/ns2:Trip/ns2:Plant_Num\">\n                                <ns1:BusinessID>\n                                    <xsl:value-of select=\"$tripEvent/payload/ns2:Trip/ns2:Plant_Num\"/>\n                                </ns1:BusinessID>\n                            </xsl:if>\n                        </ns1:Header>\n                        <ns1:Messages>\n                            <ns1:Name>\n                                <xsl:value-of select=\"&quot;LOG_MSG&quot;\"/>\n                            </ns1:Name>\n                            <ns1:Value>\n                                <xsl:value-of select=\"concat(&quot;Completed processing Trip  =  &quot;,$tripEvent/payload/ns2:Trip/ns2:TripID,&quot; at System = &quot;,$tripEvent/payload/ns2:Trip/ns2:System)\"/>\n                            </ns1:Value>\n                        </ns1:Messages>\n                        <ns1:Status>\n                            <xsl:value-of select=\"&quot;End Log&quot;\"/>\n                        </ns1:Status>\n                        <ns1:TransactionBefore>\n                            <xsl:value-of select=\"string($tripEvent)\"/>\n                        </ns1:TransactionBefore>\n                    </ns1:LogRequest>\n                </payload>\n            </event>\n        </createEvent>\n    </xsl:template>\n</xsl:stylesheet>"));
			}
			
			//Consuming/Deleting the Trip Event.
			Event.consumeEvent(tripEvent);
		}	
	}
}